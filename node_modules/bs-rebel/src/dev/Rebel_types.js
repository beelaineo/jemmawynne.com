

import * as Array_js from "../js/Array_js.js";
import * as Array_native from "../native/Array_native.js";
import * as MutableQueue_js from "../js/MutableQueue_js.js";
import * as MutableStack_js from "../js/MutableStack_js.js";
import * as MutableQueue_native from "../native/MutableQueue_native.js";
import * as MutableStack_native from "../native/MutableStack_native.js";

function MutableQueue_js_t_000(prim) {
  return prim;
}

function MutableQueue_js_t_001(prim) {
  return prim;
}

function MutableQueue_js_t_002(prim) {
  return new Array();
}

function MutableQueue_js_t_003(prim) {
  prim.length = 0;
  return /* () */0;
}

function MutableQueue_js_t_004(prim, prim$1) {
  prim.push(prim$1);
  return /* () */0;
}

function MutableQueue_js_t_005(prim) {
  return prim["0"];
}

function MutableQueue_js_t_006(prim) {
  return prim.shift();
}

function MutableQueue_js_t_007(prim) {
  return prim.slice();
}

function MutableQueue_js_t_008(prim) {
  return prim.length;
}

function MutableQueue_js_t_009(prim, prim$1) {
  return prim.map(prim$1);
}

function MutableQueue_js_t_010(prim, prim$1) {
  return prim.map(prim$1);
}

function MutableQueue_js_t_011(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

function MutableQueue_js_t_012(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

function MutableQueue_js_t_016(prim, prim$1) {
  Array.prototype.push.apply(prim, prim$1);
  return /* () */0;
}

var MutableQueue_js_t = [
  MutableQueue_js_t_000,
  MutableQueue_js_t_001,
  MutableQueue_js_t_002,
  MutableQueue_js_t_003,
  MutableQueue_js_t_004,
  MutableQueue_js_t_005,
  MutableQueue_js_t_006,
  MutableQueue_js_t_007,
  MutableQueue_js_t_008,
  MutableQueue_js_t_009,
  MutableQueue_js_t_010,
  MutableQueue_js_t_011,
  MutableQueue_js_t_012,
  MutableQueue_js.isEmpty,
  MutableQueue_js.reduceU,
  MutableQueue_js.reduce,
  MutableQueue_js_t_016,
  MutableQueue_js.transfer
];

var MutableQueue_native_t = /* MutableQueue_native */[
  MutableQueue_native.fromArray,
  MutableQueue_native.toArray,
  MutableQueue_native.make,
  MutableQueue_native.clear,
  MutableQueue_native.add,
  MutableQueue_native.peek,
  MutableQueue_native.pop,
  MutableQueue_native.copy,
  MutableQueue_native.size,
  MutableQueue_native.mapU,
  MutableQueue_native.map,
  MutableQueue_native.forEachU,
  MutableQueue_native.forEach,
  MutableQueue_native.isEmpty,
  MutableQueue_native.reduceU,
  MutableQueue_native.reduce,
  MutableQueue_native.addMany,
  MutableQueue_native.transfer
];

function MutableStack_js_t_000(prim) {
  return new Array();
}

function MutableStack_js_t_001(prim) {
  prim.length = 0;
  return /* () */0;
}

function MutableStack_js_t_002(prim, prim$1) {
  prim.push(prim$1);
  return /* () */0;
}

function MutableStack_js_t_003(prim) {
  return prim.pop();
}

function MutableStack_js_t_004(prim) {
  return prim.slice();
}

function MutableStack_js_t_005(prim) {
  return prim.length;
}

function MutableStack_js_t_006(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

function MutableStack_js_t_007(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

var MutableStack_js_t = [
  MutableStack_js_t_000,
  MutableStack_js_t_001,
  MutableStack_js_t_002,
  MutableStack_js_t_003,
  MutableStack_js_t_004,
  MutableStack_js_t_005,
  MutableStack_js_t_006,
  MutableStack_js_t_007,
  MutableStack_js.isEmpty,
  MutableStack_js.top
];

var MutableStack_native_t = /* MutableStack_native */[
  MutableStack_native.make,
  MutableStack_native.clear,
  MutableStack_native.push,
  MutableStack_native.pop,
  MutableStack_native.copy,
  MutableStack_native.size,
  MutableStack_native.forEachU,
  MutableStack_native.forEach,
  MutableStack_native.isEmpty,
  MutableStack_native.top
];

function Array_js_t_000(prim) {
  return new Array();
}

function Array_js_t_001(prim) {
  return new Array(prim);
}

function Array_js_t_003(prim) {
  return prim.length;
}

function Array_js_t_004(prim, prim$1) {
  return prim[prim$1];
}

function Array_js_t_005(prim, prim$1) {
  return prim[prim$1];
}

function Array_js_t_006(prim, prim$1, prim$2) {
  prim[prim$1] = prim$2;
  return /* () */0;
}

function Array_js_t_007(prim, prim$1) {
  prim.fill(prim$1);
  return /* () */0;
}

function Array_js_t_008(prim) {
  prim.reverse();
  return /* () */0;
}

function Array_js_t_009(prim) {
  return prim.slice();
}

function Array_js_t_010(prim, prim$1, prim$2) {
  return prim.slice(prim$1, prim$2);
}

function Array_js_t_011(prim, prim$1) {
  return prim.slice(prim$1);
}

function Array_js_t_012(prim, prim$1) {
  return prim.concat(prim$1);
}

function Array_js_t_013(prim, prim$1) {
  return prim.concat(prim$1);
}

function Array_js_t_014(prim, prim$1) {
  return prim.map(prim$1);
}

function Array_js_t_015(prim, prim$1) {
  return prim.map(prim$1);
}

function Array_js_t_016(prim, prim$1) {
  return prim.some(prim$1);
}

function Array_js_t_017(prim, prim$1) {
  return prim.some(prim$1);
}

function Array_js_t_018(prim, prim$1) {
  return prim.every(prim$1);
}

function Array_js_t_019(prim, prim$1) {
  return prim.every(prim$1);
}

function Array_js_t_020(prim, prim$1) {
  return prim.filter(prim$1);
}

function Array_js_t_021(prim, prim$1) {
  return prim.filter(prim$1);
}

function Array_js_t_022(prim, prim$1) {
  return prim.find(prim$1);
}

function Array_js_t_023(prim, prim$1) {
  return prim.find(prim$1);
}

function Array_js_t_024(prim, prim$1) {
  return prim.findIndex(prim$1);
}

function Array_js_t_025(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

function Array_js_t_026(prim, prim$1) {
  prim.forEach(prim$1);
  return /* () */0;
}

function Array_js_t_027(prim, prim$1, prim$2) {
  return prim.reduce(prim$1, prim$2);
}

function Array_js_t_028(prim, prim$1, prim$2) {
  return prim.reduce(prim$1, prim$2);
}

function Array_js_t_029(prim, prim$1, prim$2) {
  return prim.reduceRight(prim$1, prim$2);
}

function Array_js_t_030(prim, prim$1) {
  return prim.indexOf(prim$1);
}

function Array_js_t_031(prim, prim$1) {
  return prim.lastIndexOf(prim$1);
}

var Array_js_t = [
  Array_js_t_000,
  Array_js_t_001,
  Array_js.make,
  Array_js_t_003,
  Array_js_t_004,
  Array_js_t_005,
  Array_js_t_006,
  Array_js_t_007,
  Array_js_t_008,
  Array_js_t_009,
  Array_js_t_010,
  Array_js_t_011,
  Array_js_t_012,
  Array_js_t_013,
  Array_js_t_014,
  Array_js_t_015,
  Array_js_t_016,
  Array_js_t_017,
  Array_js_t_018,
  Array_js_t_019,
  Array_js_t_020,
  Array_js_t_021,
  Array_js_t_022,
  Array_js_t_023,
  Array_js_t_024,
  Array_js_t_025,
  Array_js_t_026,
  Array_js_t_027,
  Array_js_t_028,
  Array_js_t_029,
  Array_js_t_030,
  Array_js_t_031,
  Array_js.shuffle,
  Array_js.shuffleInPlace,
  Array_js.set,
  Array_js.reverse,
  Array_js.remove,
  Array_js.removeCount,
  Array_js.includes
];

var Array_native_t = [
  Array_native.makeEmpty,
  Array_native.makeUninitialized,
  Array_native.make,
  Array_native.size,
  Array_native.get,
  Array_native.getUnsafe,
  Array_native.setUnsafe,
  Array_native.fill,
  Array_native.reverseInPlace,
  Array_native.copy,
  Array_native.slice,
  Array_native.sliceFrom,
  Array_native.append,
  Array_native.concat,
  Array_native.map,
  Array_native.mapi,
  Array_native.some,
  Array_native.somei,
  Array_native.every,
  Array_native.everyi,
  Array_native.filter,
  Array_native.filteri,
  Array_native.find,
  Array_native.findi,
  Array_native.findIndex,
  Array_native.forEach,
  Array_native.forEachi,
  Array_native.reduce,
  Array_native.reducei,
  Array_native.reduceRight,
  Array_native.indexOf,
  Array_native.lastIndexOf,
  Array_native.shuffle,
  Array_native.shuffleInPlace,
  Array_native.set,
  Array_native.reverse,
  Array_native.remove,
  Array_native.removeCount,
  Array_native.includes
];

export {
  MutableQueue_js_t ,
  MutableQueue_native_t ,
  MutableStack_js_t ,
  MutableStack_native_t ,
  Array_js_t ,
  Array_native_t ,
  
}
/* No side effect */
