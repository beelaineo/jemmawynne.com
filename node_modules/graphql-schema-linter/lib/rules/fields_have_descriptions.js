'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldsHaveDescriptions = FieldsHaveDescriptions;

var _buildASTSchema = require('graphql/utilities/buildASTSchema');

var _validation_error = require('../validation_error');

function FieldsHaveDescriptions(configuration, context) {
  return {
    FieldDefinition: function FieldDefinition(node, key, parent, path, ancestors) {
      if ((0, _buildASTSchema.getDescription)(node, {
        commentDescriptions: configuration.getCommentDescriptions()
      })) {
        return;
      }

      var fieldName = node.name.value;
      var parentName = ancestors[ancestors.length - 1].name.value;

      context.reportError(new _validation_error.ValidationError('fields-have-descriptions', 'The field `' + parentName + '.' + fieldName + '` is missing a description.', [node]));
    }
  };
}