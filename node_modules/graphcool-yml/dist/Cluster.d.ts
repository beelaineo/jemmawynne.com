import 'isomorphic-fetch';
import { GraphQLClient } from 'graphql-request';
export declare class Cluster {
    name: string;
    baseUrl: string;
    local: boolean;
    clusterSecret?: string;
    requiresAuth: boolean;
    private cachedToken?;
    constructor(name: string, baseUrl: string, clusterSecret?: string, local?: boolean);
    getToken(serviceName: string, workspaceSlug?: string, stageName?: string): Promise<string>;
    getLocalToken(): string;
    readonly cloudClient: GraphQLClient;
    generateClusterToken(serviceName: string, workspaceSlug?: string, stageName?: string): Promise<string>;
    getApiEndpoint(serviceName: string, stage: string, workspaceSlug?: string): string;
    getWSEndpoint(serviceName: string, stage: string, workspaceSlug?: string): string;
    getImportEndpoint(serviceName: string, stage: string, workspaceSlug?: string): string;
    getExportEndpoint(serviceName: string, stage: string, workspaceSlug?: string): string;
    getDeployEndpoint(): string;
    isOnline(): Promise<boolean>;
    getVersion(): Promise<string | null>;
}
