"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _mediaStyle = _interopRequireDefault(require("part:@sanity/components/previews/media-style"));

var _circle = _interopRequireDefault(require("part:@sanity/components/progress/circle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var fieldProp = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node, _propTypes.default.func]);

class MediaPreview extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        title = _this$props.title,
        subtitle = _this$props.subtitle,
        description = _this$props.description,
        media = _this$props.media,
        mediaDimensions = _this$props.mediaDimensions,
        children = _this$props.children,
        isPlaceholder = _this$props.isPlaceholder,
        progress = _this$props.progress;

    if (isPlaceholder) {
      return _react.default.createElement("div", {
        className: _mediaStyle.default.root
      }, _react.default.createElement("div", {
        className: _mediaStyle.default.padder,
        style: {
          paddingTop: "".concat(100 / mediaDimensions.aspect || 100, "%")
        }
      }));
    }

    return _react.default.createElement("div", {
      className: _mediaStyle.default.root,
      title: title
    }, _react.default.createElement("div", {
      className: _mediaStyle.default.padder,
      style: {
        paddingTop: "".concat(100 / mediaDimensions.aspect || 100, "%")
      }
    }), _react.default.createElement("div", {
      className: _mediaStyle.default.mediaContainer
    }, typeof media === 'undefined' && _react.default.createElement("div", {
      className: _mediaStyle.default.mediaString
    }, title), typeof media === 'function' && media({
      dimensions: mediaDimensions,
      layout: 'media'
    }), typeof media === 'string' && _react.default.createElement("div", {
      className: _mediaStyle.default.mediaString
    }, media), _react.default.isValidElement(media) && media, typeof progress === 'number' && progress > -1 && _react.default.createElement("div", {
      className: _mediaStyle.default.progress
    }, _react.default.createElement(_circle.default, {
      percent: progress,
      showPercent: true,
      text: "Uploaded"
    }))), _react.default.createElement("div", {
      className: _mediaStyle.default.meta
    }, _react.default.createElement("div", {
      className: _mediaStyle.default.metaInner
    }, title && _react.default.createElement("h2", {
      className: _mediaStyle.default.title
    }, title), subtitle && _react.default.createElement("h3", {
      className: _mediaStyle.default.subtitle
    }, subtitle), description && _react.default.createElement("p", {
      className: _mediaStyle.default.description
    }, description))), children);
  }

}

exports.default = MediaPreview;

_defineProperty(MediaPreview, "propTypes", {
  title: fieldProp,
  subtitle: fieldProp,
  description: fieldProp,
  media: fieldProp,
  progress: _propTypes.default.number,
  mediaDimensions: _propTypes.default.shape({
    width: _propTypes.default.number,
    height: _propTypes.default.number,
    fit: _propTypes.default.oneOf(['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min']),
    aspect: _propTypes.default.number
  }),
  children: _propTypes.default.node,
  isPlaceholder: _propTypes.default.bool
});

_defineProperty(MediaPreview, "defaultProps", {
  title: undefined,
  subtitle: undefined,
  description: undefined,
  media: undefined,
  isPlaceholder: false,
  children: undefined,
  mediaDimensions: {
    width: 160,
    height: 160,
    aspect: 1,
    fit: 'crop'
  }
});