"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/radiobutton/default-style"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class RadioButton extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleMouseUp", event => {
      this.handleBlur();
    });

    _defineProperty(this, "handleChange", () => {
      this.props.onChange(this.props.item);
    });

    _defineProperty(this, "handleFocus", () => {
      this.props.onFocus(this.props.item);
    });

    _defineProperty(this, "handleBlur", () => {
      window.setTimeout(() => {
        this.props.onBlur(this.props.item);
      }, 0.001);
    });
  }

  componentWillMount() {
    this._inputId = (0, _uniqueId2.default)('RadioSelect');
  }

  render() {
    var _this$props = this.props,
        disabled = _this$props.disabled,
        checked = _this$props.checked,
        label = _this$props.label,
        name = _this$props.name,
        hasFocus = _this$props.hasFocus;
    return _react.default.createElement("label", {
      className: "\n          ".concat(_defaultStyle.default.root, "\n          ").concat(disabled ? _defaultStyle.default.isDisabled : '', "\n          ").concat(checked ? _defaultStyle.default.isChecked : _defaultStyle.default.unChecked, "\n          ").concat(hasFocus ? _defaultStyle.default.isFocused : '', "\n        "),
      onMouseUp: this.handleMouseUp
    }, _react.default.createElement("input", {
      className: _defaultStyle.default.input,
      type: "radio",
      onChange: this.handleChange,
      checked: checked,
      id: this._inputId,
      name: name,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      disabled: disabled
    }), _react.default.createElement("div", {
      className: _defaultStyle.default.label,
      htmlFor: this._inputId
    }, label), _react.default.createElement("div", {
      className: _defaultStyle.default.circleOutline
    }, _react.default.createElement("div", {
      className: _defaultStyle.default.tickOutline
    })), _react.default.createElement("div", {
      className: _defaultStyle.default.focusHelper
    }), _react.default.createElement("div", {
      className: _defaultStyle.default.tickHelper
    }));
  }

}

exports.default = RadioButton;

_defineProperty(RadioButton, "propTypes", {
  label: _propTypes.default.string.isRequired,
  item: _propTypes.default.object.isRequired,
  onChange: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  checked: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  name: _propTypes.default.string,
  hasFocus: _propTypes.default.bool
});

_defineProperty(RadioButton, "defaultProps", {
  onChange() {},

  onFocus() {},

  onBlur() {}

});