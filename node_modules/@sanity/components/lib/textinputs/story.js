"use strict";

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _default = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _CustomStyles = _interopRequireDefault(require("./styles/CustomStyles.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VALID_TYPES = ['color', 'date', 'email', 'month', 'password', 'search', 'tel', 'text', 'number', 'url', 'week'];
var centerStyle = {
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  height: '100%',
  width: '100%',
  position: 'absolute',
  boxSizing: 'border-box',
  padding: '2rem',
  top: 0,
  left: 0
};

class DefaultTextInputTest extends _react.default.PureComponent {
  constructor() {
    super(...arguments);
    this.handleChange = this.handleChange.bind(this);
    this.state = {
      value: ''
    };
  }

  handleChange(event) {
    var value = event.currentTarget.value;
    this.setState({
      value: value
    });
  }

  render() {
    return _react.default.createElement(_default.default, {
      placeholder: "This is the placeholder",
      onChange: this.handleChange,
      onFocus: (0, _storybook.action)('onFocus'),
      onKeyPress: (0, _storybook.action)('onKeyPress'),
      onBlur: (0, _storybook.action)('onBlur'),
      value: this.state.value,
      id: "ThisIsAnUniqueId"
    });
  }

}

(0, _storybook.storiesOf)('Text inputs').addDecorator(_knobs.withKnobs).add('Default', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/textinputs/default",
    propTables: [_default.default]
  }, _react.default.createElement(_default.default, {
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    value: (0, _knobs.text)('value', '', 'props'),
    type: (0, _knobs.select)('type', ['text', 'number', 'email', 'tel'], 'text', 'props'),
    isSelected: (0, _knobs.boolean)('isSelected', false, 'props'),
    disabled: (0, _knobs.boolean)('disabled', false, 'props'),
    readOnly: (0, _knobs.boolean)('readOnly', false, 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onKeyPress: (0, _storybook.action)('onKeyPress'),
    onBlur: (0, _storybook.action)('onBlur'),
    id: "ThisIsAnUniqueId"
  })));
}).add('Custom style', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/textinputs/default",
    propTables: [_default.default]
  }, _react.default.createElement(_default.default, {
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    value: (0, _knobs.text)('value', false, 'props'),
    type: (0, _knobs.select)('type', ['text', 'number', 'email', 'tel'], 'text', 'props'),
    selected: (0, _knobs.boolean)('selected', false, 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onKeyPress: (0, _storybook.action)('onKeyPress'),
    onBlur: (0, _storybook.action)('onBlur'),
    styles: (0, _knobs.object)('styles', _CustomStyles.default, 'props'),
    id: "ThisIsAnUniqueId"
  })));
}).add('Default (test)', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(DefaultTextInputTest, {
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    value: (0, _knobs.text)('value', '', 'props'),
    type: (0, _knobs.select)('type', VALID_TYPES, 'text', 'props'),
    hasError: (0, _knobs.boolean)('hasError', false, 'props'),
    isClearable: (0, _knobs.boolean)('isClearable', false, 'props'),
    isSelected: (0, _knobs.boolean)('isSelected', false, 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onKeyPress: (0, _storybook.action)('onKeyPress'),
    onBlur: (0, _storybook.action)('onBlur'),
    onClear: (0, _storybook.action)('onClear'),
    id: "ThisIsAnUniqueId"
  }));
});