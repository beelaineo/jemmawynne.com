"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _router = require("part:@sanity/base/router");

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/menus/default-style"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DefaultMenuItem extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleClick", event => {
      event.stopPropagation();
      this.props.onAction(event, this.props.item);
    });

    _defineProperty(this, "handleFocus", event => {
      this.props.onFocus(event, this.props.item);
    });

    _defineProperty(this, "renderLinkChildren", () => {
      var item = this.props.item;
      var Icon = item.icon,
          title = item.title;
      return _react.default.createElement(_react.default.Fragment, null, Icon && _react.default.createElement("span", {
        className: _defaultStyle.default.iconContainer
      }, _react.default.createElement(Icon, {
        className: _defaultStyle.default.icon
      })), title);
    });

    _defineProperty(this, "renderIntentLink", () => {
      var _this$props = this.props,
          danger = _this$props.danger,
          item = _this$props.item;
      var intent = item.intent;
      return _react.default.createElement(_router.IntentLink, {
        onClick: this.handleClick,
        className: danger ? _defaultStyle.default.dangerLink : _defaultStyle.default.link,
        onFocus: this.handleFocus,
        tabIndex: "0",
        intent: intent.type,
        params: intent.params
      }, this.renderLinkChildren());
    });

    _defineProperty(this, "renderFunctionLink", () => {
      var _this$props2 = this.props,
          isDisabled = _this$props2.isDisabled,
          danger = _this$props2.danger;
      return _react.default.createElement("a", {
        onClick: isDisabled ? null : this.handleClick,
        className: danger ? _defaultStyle.default.dangerLink : _defaultStyle.default.link,
        onFocus: this.handleFocus,
        tabIndex: "0"
      }, this.renderLinkChildren());
    });
  }

  render() {
    var _this$props3 = this.props,
        className = _this$props3.className,
        isDisabled = _this$props3.isDisabled,
        isFocused = _this$props3.isFocused,
        item = _this$props3.item;
    var intent = item.intent;
    return _react.default.createElement("li", {
      className: (0, _classnames.default)([isFocused ? _defaultStyle.default.focusedItem : _defaultStyle.default.item, isDisabled && _defaultStyle.default.isDisabled, className])
    }, intent ? this.renderIntentLink() : this.renderFunctionLink());
  }

}

_defineProperty(DefaultMenuItem, "propTypes", {
  isFocused: _propTypes.default.bool,
  onFocus: _propTypes.default.func.isRequired,
  onAction: _propTypes.default.func.isRequired,
  className: _propTypes.default.string,
  danger: _propTypes.default.bool,
  isDisabled: _propTypes.default.bool,
  item: _propTypes.default.shape({
    title: _propTypes.default.node.isRequired,
    icon: _propTypes.default.func,
    intent: _propTypes.default.shape({
      type: _propTypes.default.string.isRequired,
      params: _propTypes.default.object
    })
  }).isRequired
});

_defineProperty(DefaultMenuItem, "defaultProps", {
  className: '',
  isFocused: false,
  isDisabled: false,
  danger: false
});

var _default = DefaultMenuItem;
exports.default = _default;