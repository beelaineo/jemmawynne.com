"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _barStyle = _interopRequireDefault(require("part:@sanity/components/progress/bar-style"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ProgressBar extends _react.default.Component {
  render() {
    var _this$props = this.props,
        percent = _this$props.percent,
        isComplete = _this$props.isComplete,
        text = _this$props.text,
        showPercent = _this$props.showPercent,
        isInProgress = _this$props.isInProgress;
    var rootClasses = "\n      ".concat(isComplete ? _barStyle.default.completed : _barStyle.default.uncompleted, "\n      ").concat(percent >= 100 && _barStyle.default.hundredPercent, "\n      ").concat(isInProgress ? _barStyle.default.isInProgress : _barStyle.default.isNotInProgress, "\n    ");
    var barStyle = {
      width: "".concat(percent, "%")
    };
    return _react.default.createElement("div", {
      className: rootClasses
    }, _react.default.createElement("div", {
      className: _barStyle.default.inner
    }, _react.default.createElement("div", {
      className: _barStyle.default.barContainer
    }, _react.default.createElement("div", {
      className: _barStyle.default.bar,
      style: barStyle
    })), showPercent && _react.default.createElement("div", {
      className: _barStyle.default.percent
    }, Math.round(percent, 1), "%"), text && _react.default.createElement("div", {
      className: _barStyle.default.text
    }, text)));
  }

}

exports.default = ProgressBar;

_defineProperty(ProgressBar, "propTypes", {
  className: _propTypes.default.string,
  percent: _propTypes.default.number,
  animation: _propTypes.default.bool,
  isComplete: _propTypes.default.bool,
  text: _propTypes.default.string,
  showPercent: _propTypes.default.bool
});