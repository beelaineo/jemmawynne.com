"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _circleStyle = _interopRequireDefault(require("part:@sanity/components/progress/circle-style"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var radiusFactor = 1.3;
var widthFactor = 1.2;
var heightFactor = 1.2;

class ProgressCircle extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        percent = _this$props.percent,
        text = _this$props.text,
        style = _this$props.style,
        showPercent = _this$props.showPercent,
        isComplete = _this$props.isComplete;
    var radius = 50;
    var strokeWidth = 10;
    var width = radius * 2;
    var height = radius * 2;
    var viewBox = "0 0 ".concat(width, " ").concat(height);
    var dashArray = radius * Math.PI * 2;
    var dashOffset = dashArray - dashArray * percent / 100;
    return _react.default.createElement("div", {
      className: isComplete ? _circleStyle.default.completed : _circleStyle.default.unCompleted,
      style: style
    }, _react.default.createElement("svg", {
      className: _circleStyle.default.svg,
      width: width,
      height: height,
      viewBox: viewBox
    }, _react.default.createElement("circle", {
      className: _circleStyle.default.background,
      cx: radius,
      cy: radius,
      r: radius - strokeWidth,
      strokeWidth: "".concat(strokeWidth, "px")
    }), _react.default.createElement("circle", {
      className: _circleStyle.default.foreground,
      cx: radius,
      cy: radius,
      r: radius - strokeWidth,
      strokeWidth: "".concat(strokeWidth, "px"),
      style: {
        strokeDasharray: dashArray,
        strokeDashoffset: dashOffset
      }
    }), _react.default.createElement("circle", {
      className: _circleStyle.default.activeCircle,
      cx: radius,
      cy: radius,
      r: radius - 1,
      style: {
        strokeDasharray: Math.PI,
        strokeDashoffset: Math.PI
      }
    }), showPercent && _react.default.createElement("text", {
      className: _circleStyle.default.percent,
      x: radius,
      y: text ? radius - 5 : radius,
      dy: ".4em",
      textAnchor: "middle"
    }, "".concat(Math.round(percent, 1), "%")), text && _react.default.createElement("text", {
      className: _circleStyle.default.status,
      x: radius,
      y: radius * radiusFactor - 5,
      dy: ".4em",
      textAnchor: "middle"
    }, text)));
  }

}

exports.default = ProgressCircle;

_defineProperty(ProgressCircle, "propTypes", {
  percent: _propTypes.default.number,
  text: _propTypes.default.string,
  style: _propTypes.default.object,
  showPercent: _propTypes.default.bool,
  isComplete: _propTypes.default.bool
});

_defineProperty(ProgressCircle, "defaultProps", {
  percent: 0,
  style: {},
  text: '',
  showPercent: false
});