"use strict";

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _buttons = _interopRequireDefault(require("part:@sanity/components/toggles/buttons"));

var _button = _interopRequireDefault(require("part:@sanity/components/toggles/button"));

var _switch = _interopRequireDefault(require("part:@sanity/components/toggles/switch"));

var _checkbox = _interopRequireDefault(require("part:@sanity/components/toggles/checkbox"));

var _sanityLogoIcon = _interopRequireDefault(require("part:@sanity/base/sanity-logo-icon"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var centerStyle = {
  display: 'block',
  position: 'absolute',
  padding: '2rem',
  boxSizing: 'border-box',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)'
};
(0, _storybook.storiesOf)('Toggles').addDecorator(_knobs.withKnobs).add('Switch', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/toggles/switch",
    propTables: [_switch.default]
  }, _react.default.createElement(_switch.default, {
    checked: (0, _knobs.boolean)('undefined', false) ? undefined : (0, _knobs.boolean)('checked', false, 'props'),
    label: (0, _knobs.text)('label', 'This is the label', 'props'),
    description: (0, _knobs.text)('description', 'This is the description', 'props'),
    disabled: (0, _knobs.boolean)('disabled', false, 'props'),
    onChange: (0, _storybook.action)('change'),
    onFocus: (0, _storybook.action)('onFocus'),
    onBlur: (0, _storybook.action)('onBlur')
  })));
}).add('Checkbox', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/toggles/checkbox",
    propTables: [_checkbox.default]
  }, _react.default.createElement(_checkbox.default, {
    label: (0, _knobs.text)('label', 'This is the label', 'props'),
    checked: (0, _knobs.boolean)('undefined', false) ? undefined : (0, _knobs.boolean)('checked', false, 'props'),
    disabled: (0, _knobs.boolean)('disabled', false, 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onBlur: (0, _storybook.action)('onBlur'),
    onFocus: (0, _storybook.action)('onFocus')
  }, (0, _knobs.boolean)('Children', false, 'test') ? _react.default.createElement("h1", {
    style: {
      color: 'red'
    }
  }, "Test") : false)));
}).add('Buttons', () => {
  var items = [{
    title: 'The good',
    key: 'good'
  }, {
    title: 'The Bad',
    key: 'bad'
  }, {
    title: 'The ugly',
    key: 'ugly'
  }];
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/toggles/buttons",
    propTables: [_buttons.default]
  }, _react.default.createElement(_buttons.default, {
    items: items,
    label: "Select something",
    onChange: (0, _storybook.action)('onChange'),
    value: items[(0, _knobs.number)('value', 0, {
      range: 'true',
      min: 0,
      max: 2
    }, 'test')]
  })));
}).add('Toggle button', () => {
  var icon = (0, _knobs.boolean)('icon', false) ? _sanityLogoIcon.default : false;
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/toggles/buttons",
    propTables: [_buttons.default]
  }, _react.default.createElement(_button.default, {
    selected: (0, _knobs.boolean)('selected', false, 'props'),
    disabled: (0, _knobs.boolean)('disabled', false, 'props'),
    onClick: (0, _storybook.action)('onClick'),
    icon: icon
  }, (0, _knobs.text)('children', 'this is the content', 'props'))));
}).add('Toggle button collection', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_button.default, {
    icon: _sanityLogoIcon.default,
    selected: true,
    onClick: (0, _storybook.action)('onClick')
  }), _react.default.createElement(_button.default, {
    icon: _sanityLogoIcon.default,
    selected: true,
    onClick: (0, _storybook.action)('onClick')
  }), _react.default.createElement(_button.default, {
    icon: _sanityLogoIcon.default,
    selected: true,
    onClick: (0, _storybook.action)('onClick')
  }), _react.default.createElement(_button.default, {
    icon: _sanityLogoIcon.default,
    selected: true,
    onClick: (0, _storybook.action)('onClick')
  }));
});