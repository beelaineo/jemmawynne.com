"use strict";

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _default = _interopRequireDefault(require("part:@sanity/components/textfields/default"));

var _search = _interopRequireDefault(require("part:@sanity/components/textfields/search"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var centerStyle = {
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  height: '100%',
  width: '100%',
  position: 'absolute',
  boxSizing: 'border-box',
  padding: '2rem',
  top: 0,
  left: 0
};
(0, _storybook.storiesOf)('Textfields').addDecorator(_knobs.withKnobs).add('Default', () => {
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/textfields/default",
    propTables: [_default.default]
  }, _react.default.createElement(_default.default, {
    label: (0, _knobs.text)('label', 'This is the label', 'props'),
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    value: (0, _knobs.text)('value', undefined, 'props'),
    hasError: (0, _knobs.boolean)('hasError', false, 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onClear: (0, _storybook.action)('onClear'),
    isClearable: (0, _knobs.boolean)('isClearable', false, 'props'),
    hasFocus: (0, _knobs.boolean)('hasFocus', false, 'props')
  })));
}).add('Spacing test', () => {
  return _react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, _react.default.createElement(_default.default, {
    label: "Label",
    placeholder: "Placeholder"
  }), _react.default.createElement(_default.default, {
    label: "Label",
    placeholder: "Placeholder"
  }), _react.default.createElement(_default.default, {
    label: "Label",
    placeholder: "Placeholder"
  }), _react.default.createElement(_default.default, {
    label: "Label",
    placeholder: "Placeholder"
  }));
});