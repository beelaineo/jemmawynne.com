"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/textfields/default-style"));

var _default = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DefaultTextField extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleClear", () => {
      this.props.onClear();
    });
  }

  componentWillMount() {
    this._inputId = this.props.id || (0, _uniqueId2.default)('DefaultTextField');
  }

  render() {
    var _this$props = this.props,
        label = _this$props.label,
        placeholder = _this$props.placeholder,
        hasError = _this$props.hasError,
        isClearable = _this$props.isClearable,
        type = _this$props.type,
        className = _this$props.className,
        level = _this$props.level,
        description = _this$props.description,
        hasFocus = _this$props.hasFocus,
        onChange = _this$props.onChange,
        onKeyPress = _this$props.onKeyPress,
        onFocus = _this$props.onFocus,
        onBlur = _this$props.onBlur,
        value = _this$props.value;
    return _react.default.createElement(_default2.default, {
      className: "".concat(hasError ? _defaultStyle.default.hasError : _defaultStyle.default.root, " ").concat(className || ''),
      level: level,
      labelFor: this._inputId,
      label: label,
      description: description
    }, _react.default.createElement(_default.default, {
      className: _defaultStyle.default.input,
      id: this._inputId,
      type: type,
      onChange: onChange,
      value: value,
      placeholder: placeholder,
      onKeyPress: onKeyPress,
      onFocus: onFocus,
      onBlur: onBlur,
      onClear: this.handleClear,
      isClearable: isClearable,
      hasError: hasError,
      hasFocus: hasFocus
    }));
  }

}

exports.default = DefaultTextField;

_defineProperty(DefaultTextField, "propTypes", {
  label: _propTypes.default.string.isRequired,
  id: _propTypes.default.string,
  type: _propTypes.default.string,
  onChange: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onClear: _propTypes.default.func,
  onKeyPress: _propTypes.default.func,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  hasError: _propTypes.default.bool,
  level: _propTypes.default.number,
  placeholder: _propTypes.default.string,
  isClearable: _propTypes.default.bool,
  className: _propTypes.default.string,
  description: _propTypes.default.string,
  hasFocus: _propTypes.default.bool
});

_defineProperty(DefaultTextField, "defaultProps", {
  level: 1,
  value: '',
  hasFocus: false,

  onKeyPress() {},

  onChange() {},

  onFocus() {},

  onClear() {}

});