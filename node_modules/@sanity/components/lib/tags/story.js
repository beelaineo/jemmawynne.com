"use strict";

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _textfield = _interopRequireDefault(require("part:@sanity/components/tags/textfield"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var centerStyle = {
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  height: '100%',
  width: '100%',
  position: 'absolute',
  top: 0,
  left: 0
};

class DefaultTextFieldTagsImplementation extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleChange", tags => {
      this.setState({
        tags: tags
      });
    });

    this.state = {
      tags: this.props.tags || []
    };
  }

  render() {
    return _react.default.createElement(_textfield.default, {
      label: "Tags",
      placeholder: "This is the placeholder",
      value: this.state.tags,
      onChange: this.handleChange
    });
  }

}

_defineProperty(DefaultTextFieldTagsImplementation, "propTypes", {
  tags: _propTypes.default.arrayOf(_propTypes.default.string)
});

(0, _storybook.storiesOf)('Tags').addDecorator(_knobs.withKnobs).add('Tags', () => {
  var tags = ['Test', 'Sanity'];
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/tags/textfield",
    propTables: [_textfield.default]
  }, _react.default.createElement(_textfield.default, {
    label: (0, _knobs.text)('label', 'Tags', 'props'),
    readOnly: (0, _knobs.boolean)('readOnly', false, 'props'),
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    value: (0, _knobs.array)('value', tags, 'props'),
    onChange: (0, _storybook.action)('onChange')
  })));
}).add('Tags (test)', () => {
  var tags = ['Test', 'Sanity', 'React', 'Computer', 'Macbook', 'Awesome', 'Windows', 'CPU', 'Moore', 'Intel', 'Ada', 'Enigma'];
  return _react.default.createElement("div", {
    style: centerStyle
  }, _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/tags/textfield",
    propTables: [_textfield.default]
  }, _react.default.createElement(DefaultTextFieldTagsImplementation, {
    tags: (0, _knobs.array)('tags', tags, 'props')
  })));
});