"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get2 = _interopRequireDefault(require("lodash/get"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _searchableStyle = _interopRequireDefault(require("part:@sanity/components/selects/searchable-style"));

var _angleDownIcon = _interopRequireDefault(require("part:@sanity/base/angle-down-icon"));

var _default = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _reactPopper = require("react-popper");

var _Stacked = _interopRequireDefault(require("../utilities/Stacked"));

var _CaptureOutsideClicks = _interopRequireDefault(require("../utilities/CaptureOutsideClicks"));

var _Escapable = _interopRequireDefault(require("../utilities/Escapable"));

var _Portal = require("../utilities/Portal");

var _reactInk = _interopRequireDefault(require("react-ink"));

var _SelectMenu = _interopRequireDefault(require("./SelectMenu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var noop = () => {};

class StatelessSearchableSelect extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleSelect", item => {
      this.props.onChange(item);
    });

    _defineProperty(this, "handleArrowClick", () => {
      var _this$props = this.props,
          isOpen = _this$props.isOpen,
          onOpen = _this$props.onOpen;

      if (isOpen) {
        this.handleClose();
      } else {
        onOpen();
      }
    });

    _defineProperty(this, "handleArrowKeyPress", event => {
      if (event.key === 'Enter') {
        this.handleArrowClick();
      }
    });

    _defineProperty(this, "handleInputChange", event => {
      this.props.onInputChange(event.target.value);
    });

    _defineProperty(this, "handleKeyDown", event => {
      var _this$props2 = this.props,
          items = _this$props2.items,
          highlightIndex = _this$props2.highlightIndex,
          onHighlightIndexChange = _this$props2.onHighlightIndexChange,
          isOpen = _this$props2.isOpen,
          onOpen = _this$props2.onOpen;

      if (event.key === 'ArrowDown' && !isOpen) {
        onOpen();
      }

      if (!items || items.length === 0) {
        return;
      }

      var lastIndex = items.length - 1;

      if (event.key === 'ArrowUp') {
        event.preventDefault();
        var nextIndex = highlightIndex - 1;
        onHighlightIndexChange(nextIndex < 0 ? lastIndex : nextIndex);
      }

      if (event.key === 'ArrowDown') {
        event.preventDefault();

        if (!isOpen) {
          onOpen();
        }

        var _nextIndex = highlightIndex + 1;

        onHighlightIndexChange(_nextIndex > lastIndex ? 0 : _nextIndex);
      }
    });

    _defineProperty(this, "handleKeyUp", event => {
      var _this$props3 = this.props,
          items = _this$props3.items,
          onChange = _this$props3.onChange,
          highlightIndex = _this$props3.highlightIndex;

      if (event.key === 'Enter' && highlightIndex > -1 && items[highlightIndex]) {
        onChange(items[highlightIndex]);
      }
    });

    _defineProperty(this, "handleClose", event => {
      this.props.onClose();
    });

    _defineProperty(this, "setInput", input => {
      this._input = input;
    });

    _defineProperty(this, "renderItem", item => {
      return _react.default.createElement("div", {
        className: _searchableStyle.default.item
      }, this.props.renderItem(item));
    });
  }

  focus() {
    this._input.focus();
  }

  render() {
    var _this$props4 = this.props,
        onClear = _this$props4.onClear,
        placeholder = _this$props4.placeholder,
        isLoading = _this$props4.isLoading,
        value = _this$props4.value,
        items = _this$props4.items,
        renderItem = _this$props4.renderItem,
        isOpen = _this$props4.isOpen,
        highlightIndex = _this$props4.highlightIndex,
        isInputSelected = _this$props4.isInputSelected,
        inputValue = _this$props4.inputValue,
        onChange = _this$props4.onChange,
        onInputChange = _this$props4.onInputChange,
        onOpen = _this$props4.onOpen,
        onClose = _this$props4.onClose,
        dropdownPosition = _this$props4.dropdownPosition,
        disabled = _this$props4.disabled,
        onHighlightIndexChange = _this$props4.onHighlightIndexChange,
        openItemElement = _this$props4.openItemElement,
        readOnly = _this$props4.readOnly,
        rest = _objectWithoutProperties(_this$props4, ["onClear", "placeholder", "isLoading", "value", "items", "renderItem", "isOpen", "highlightIndex", "isInputSelected", "inputValue", "onChange", "onInputChange", "onOpen", "onClose", "dropdownPosition", "disabled", "onHighlightIndexChange", "openItemElement", "readOnly"]);

    return _react.default.createElement(_reactPopper.Manager, null, _react.default.createElement(_reactPopper.Reference, null, (_ref) => {
      var ref = _ref.ref;
      return _react.default.createElement("div", {
        ref: ref,
        className: disabled ? _searchableStyle.default.selectContainerDisabled : _searchableStyle.default.selectContainer
      }, _react.default.createElement(_default.default, _extends({}, rest, {
        className: _searchableStyle.default.select,
        placeholder: placeholder,
        onChange: this.handleInputChange,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        value: inputValue || '',
        selected: isInputSelected,
        disabled: disabled,
        ref: this.setInput,
        spellCheck: "false",
        readOnly: readOnly
      })), _react.default.createElement("div", {
        className: _searchableStyle.default.functions
      }, openItemElement && value && _react.default.createElement("span", {
        className: _searchableStyle.default.openItem
      }, openItemElement(value)), !readOnly && onClear && value && _react.default.createElement("button", {
        type: "button",
        className: _searchableStyle.default.clearButton,
        onClick: onClear
      }, _react.default.createElement(_closeIcon.default, {
        color: "inherit"
      })), !readOnly && _react.default.createElement("div", {
        className: _searchableStyle.default.arrowAndSpinnerContainer
      }, !isLoading && _react.default.createElement("div", {
        className: _searchableStyle.default.arrow,
        onClick: disabled ? null : this.handleArrowClick,
        tabIndex: 0,
        onKeyPress: disabled ? null : this.handleArrowKeyPress
      }, _react.default.createElement(_angleDownIcon.default, {
        color: "inherit"
      }), _react.default.createElement(_reactInk.default, {
        duration: 200,
        opacity: 0.1,
        radius: 200
      })), isLoading && _react.default.createElement("div", {
        className: _searchableStyle.default.spinner
      }, _react.default.createElement(_spinner.default, null)))));
    }), isOpen && _react.default.createElement(_Stacked.default, null, isActive => _react.default.createElement(_Portal.Portal, null, _react.default.createElement(_reactPopper.Popper, {
      placement: "bottom",
      modifiers: {
        preventOverflow: {
          boundariesElement: 'viewport'
        },
        customStyle: {
          enabled: true,
          fn: data => {
            var width = (0, _get2.default)(data, 'instance.reference.clientWidth') || 500;
            data.styles = _objectSpread({}, data.styles, {
              width: width
            });
            return data;
          }
        }
      }
    }, (_ref2) => {
      var ref = _ref2.ref,
          style = _ref2.style,
          placement = _ref2.placement,
          arrowProps = _ref2.arrowProps;
      return _react.default.createElement("div", {
        ref: ref,
        "data-placement": placement,
        style: style,
        className: _searchableStyle.default.popper
      }, _react.default.createElement(_CaptureOutsideClicks.default, {
        onClickOutside: isActive && isOpen ? this.handleClose : undefined
      }, _react.default.createElement("div", {
        className: items.length === 0 ? _searchableStyle.default.listContainerNoResult : _searchableStyle.default.listContainer
      }, _react.default.createElement(_Escapable.default, {
        onEscape: event => (isActive || event.shiftKey) && this.handleClose()
      }), _react.default.createElement("div", {
        className: items.length === 0 && !isLoading ? _searchableStyle.default.noResultText : _searchableStyle.default.noResultTextHidden
      }, "No results"), items.length > 0 && _react.default.createElement(_SelectMenu.default, {
        items: items,
        value: value,
        onSelect: this.handleSelect,
        renderItem: this.renderItem,
        highlightIndex: highlightIndex
      }))));
    }))));
  }

}

exports.default = StatelessSearchableSelect;

_defineProperty(StatelessSearchableSelect, "propTypes", {
  onChange: _propTypes.default.func,
  value: _propTypes.default.any,
  inputValue: _propTypes.default.string,
  onInputChange: _propTypes.default.func,
  onClear: _propTypes.default.func,
  renderItem: _propTypes.default.func,
  placeholder: _propTypes.default.string,
  isLoading: _propTypes.default.bool,
  isOpen: _propTypes.default.bool,
  onOpen: _propTypes.default.func,
  onClose: _propTypes.default.func,
  openItemElement: _propTypes.default.func,
  items: _propTypes.default.array,
  highlightIndex: _propTypes.default.number,
  onHighlightIndexChange: _propTypes.default.func,
  isInputSelected: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  dropdownPosition: _propTypes.default.string,
  readOnly: _propTypes.default.bool
});

_defineProperty(StatelessSearchableSelect, "defaultProps", {
  onChange: noop,
  onOpen: noop,
  onClose: noop,
  onInputChange: noop,
  isLoading: false,
  readOnly: false,
  renderItem: item => item,
  items: [],
  dropdownPosition: 'bottom'
});