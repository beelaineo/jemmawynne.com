"use strict";

var _random2 = _interopRequireDefault(require("lodash/random"));

var _range2 = _interopRequireDefault(require("lodash/range"));

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _grid = require("part:@sanity/components/lists/grid");

var _sortableGrid = require("part:@sanity/components/lists/sortable-grid");

var _card = _interopRequireDefault(require("part:@sanity/components/previews/card"));

var _media = _interopRequireDefault(require("part:@sanity/components/previews/media"));

var _reactSortableHoc = require("react-sortable-hoc");

var _chance = _interopRequireDefault(require("chance"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();
var containerStyle = {
  width: '90%',
  height: '90%',
  boxShadow: '0 0 10px #999',
  overflow: 'auto',
  position: 'fixed',
  top: '50%',
  left: '50%',
  transform: 'translateX(-50%) translateY(-50%)'
};

class SortableGridTester extends _react.default.Component {
  constructor(props, args) {
    super(props, args);

    _defineProperty(this, "handleOnSort", (_ref) => {
      var oldIndex = _ref.oldIndex,
          newIndex = _ref.newIndex;
      var items = this.state.items;
      this.setState({
        items: (0, _reactSortableHoc.arrayMove)(items, oldIndex, newIndex)
      });
      this.props.onSort();
    });

    this.state = {
      items: this.props.items.slice()
    };
  }

  render() {
    var items = this.state.items;
    var Preview = this.props.renderWith;
    return _react.default.createElement(_sortableGrid.List, {
      onSort: this.handleOnSort
    }, items.map((item, index) => _react.default.createElement(_sortableGrid.Item, {
      key: item.key,
      index: index
    }, _react.default.createElement(_sortableGrid.DragHandle, null), _react.default.createElement(Preview, {
      item: item
    }))));
  }

}

(0, _storybook.storiesOf)('List (grid)').addDecorator(_knobs.withKnobs).add('MediaPreview', () => {
  var items = (0, _range2.default)(50).map((item, i) => {
    var width = (0, _random2.default)(10, 80) * 10;
    var height = (0, _random2.default)(10, 50) * 10;
    var randomImage = "http://placekitten.com/".concat(width, "/").concat(height);
    return {
      key: "".concat(i),
      title: chance.name(),
      imageUrl: randomImage,
      aspect: width / height
    };
  });
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/lists/grid",
    propTables: [_grid.List]
  }, _react.default.createElement(_grid.List, null, items.map(item => _react.default.createElement(_grid.Item, {
    key: item.key
  }, _react.default.createElement(_media.default, {
    item: item
  })))));
}).add('MediaPreview (sortable)', () => {
  var items = (0, _range2.default)(50).map((item, i) => {
    var width = (0, _random2.default)(10, 80) * 10;
    var height = (0, _random2.default)(10, 50) * 10;
    var randomImage = "http://placekitten.com/".concat(width, "/").concat(height);
    return {
      key: "".concat(i),
      title: chance.name(),
      imageUrl: randomImage,
      aspect: width / height
    };
  });
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/lists/grid",
    propTables: [_grid.List]
  }, _react.default.createElement("div", {
    style: containerStyle
  }, _react.default.createElement(SortableGridTester, {
    items: items,
    renderWith: _media.default
  })));
}, {
  propTables: [_grid.List],
  role: 'part:@sanity/components/lists/grid'
}).add('Cards', () => {
  var items = (0, _range2.default)(50).map((item, i) => {
    var width = 300;
    var height = 120;
    var randomImage = "http://placekitten.com/".concat(width, "/").concat(height);
    return {
      key: "".concat(i),
      title: chance.name(),
      subtitle: chance.sentence(),
      description: chance.sentence(1),
      media: _react.default.createElement("img", {
        src: randomImage,
        height: height,
        width: width
      })
    };
  });
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/lists/grid",
    propTables: [_grid.List]
  }, _react.default.createElement(_grid.List, null, items.map(item => _react.default.createElement(_grid.Item, {
    key: item.key
  }, _react.default.createElement(_card.default, {
    item: item
  })))));
});