"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _Details = _interopRequireDefault(require("../common/Details"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _PatchEvent = _interopRequireWildcard(require("../../PatchEvent"));

var _UnknownFields = _interopRequireDefault(require("./styles/UnknownFields.css"));

var _activateOnFocus = _interopRequireDefault(require("part:@sanity/components/utilities/activate-on-focus"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class UnknownFields extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleUnsetClick", fieldName => {
      this.props.onChange(_PatchEvent.default.from((0, _PatchEvent.unset)([fieldName])));
    });
  }

  render() {
    var _this$props = this.props,
        fieldNames = _this$props.fieldNames,
        value = _this$props.value,
        readOnly = _this$props.readOnly;
    return _react.default.createElement("div", {
      className: _UnknownFields.default.root
    }, _react.default.createElement("h2", {
      className: _UnknownFields.default.heading
    }, "Found ", fieldNames.length, " unknown fields"), _react.default.createElement("div", {
      className: _UnknownFields.default.content
    }, _react.default.createElement(_Details.default, null, "These are not defined in the current schema as valid fields for this value. This could mean that the field has been removed, or that someone else has added it to their own local schema that is not yet deployed.", fieldNames.map(fieldName => {
      return _react.default.createElement("div", {
        key: fieldName
      }, _react.default.createElement("h4", null, fieldName), _react.default.createElement(_activateOnFocus.default, null, _react.default.createElement("pre", {
        className: _UnknownFields.default.inspectValue
      }, JSON.stringify(value[fieldName], null, 2))), readOnly ? _react.default.createElement("div", null, "This value is ", _react.default.createElement("em", null, "read only"), " according to its enclosing schema type and cannot be unset. If you want to unset, make sure you remove the", ' ', _react.default.createElement("strong", null, "readOnly"), " property from the enclosing type") : _react.default.createElement(_default.default, {
        onClick: () => this.handleUnsetClick(fieldName),
        color: "danger"
      }, "Unset ", fieldName));
    }))));
  }

}

exports.default = UnknownFields;