"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _editIcon = _interopRequireDefault(require("part:@sanity/base/edit-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class EditButton extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleClick", event => {
      this.props.onClick(event);
    });
  }

  render() {
    return React.createElement(_default.default, {
      kind: "simple",
      icon: _editIcon.default,
      onClick: this.handleClick
    }, this.props.children);
  }

}

exports.default = EditButton;

_defineProperty(EditButton, "defaultProps", {
  children: []
});