"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = EnsurePlaceHolderBlockPlugin;

var _createEmptyBlock = _interopRequireDefault(require("../utils/createEmptyBlock"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function EnsurePlaceHolderBlockPlugin(blockContentFeatures) {
  return {
    onCommand(command, editor, next) {
      if (command.type !== 'ensurePlaceHolderBlock') {
        return next();
      }

      if (editor.value.document.nodes.size !== 0) {
        return next();
      }

      var block = (0, _createEmptyBlock.default)(blockContentFeatures);
      var node = block.toJSON({
        preserveKeys: true,
        preserveData: true
      });
      node.data = _objectSpread({}, node.data, {
        placeholder: true
      });
      editor.applyOperation({
        type: 'insert_node',
        path: [0],
        node: node
      });
      return editor;
    }

  };
}