"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = WrapSpanPlugin;

var _blockTools = require("@sanity/block-tools");

// This plugin creates a span node
function WrapSpanPlugin() {
  return {
    // eslint-disable-next-line complexity
    onCommand(command, editor, next) {
      if (command.type !== 'wrapSpan') {
        return next();
      }

      var options = command.args[0] || {};
      var key = options.key || (0, _blockTools.randomKey)(12);
      var annotationName = options.annotationName || null;
      var selection = editor.value.selection;

      if (!selection.isExpanded) {
        editor.command('expandToWord');
      }

      var originalSelection = editor.value.selection;
      var span = {
        isVoid: false,
        type: 'span',
        object: 'inline',
        data: {
          annotations: {},
          focusedAnnotationName: null,
          originalSelection: originalSelection
        },
        key
      };
      editor.unwrapInline('span').wrapInline(span);
      var currentSpan = editor.value.inlines.filter(inline => inline.key === key).first();
      var data = {
        annotations: currentSpan ? currentSpan.data.get('annotations') || {} : {},
        focusedAnnotationName: annotationName
      };

      if (annotationName) {
        data.annotations[annotationName] = {
          _type: annotationName,
          _key: key
        };
        editor.setInlines({
          data: data
        });
      }

      return editor;
    }

  };
}