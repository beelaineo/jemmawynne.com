"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _blockMarkers = _interopRequireDefault(require("part:@sanity/form-builder/input/block-editor/block-markers"));

var _BlockExtras = _interopRequireDefault(require("./styles/BlockExtras.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class BlockExtras extends _react.default.PureComponent {
  getValidationMarkers() {
    var markers = this.props.markers;
    var validation = markers.filter(mrkr => mrkr.type === 'validation');
    return validation.map(mrkr => {
      if (mrkr.path.length <= 1) {
        return mrkr;
      }

      var level = mrkr.level === 'error' ? 'errors' : 'warnings';
      return Object.assign({}, mrkr, {
        item: mrkr.item.cloneWithMessage("Contains ".concat(level))
      });
    });
  }

  render() {
    var _this$props = this.props,
        blockActions = _this$props.blockActions,
        editor = _this$props.editor,
        markers = _this$props.markers,
        onFocus = _this$props.onFocus,
        renderCustomMarkers = _this$props.renderCustomMarkers,
        fullscreen = _this$props.fullscreen;
    var scopedValidation = this.getValidationMarkers();
    var errors = scopedValidation.filter(mrkr => mrkr.level === 'error');
    var warnings = scopedValidation.filter(mrkr => mrkr.level === 'warning');
    return _react.default.createElement("div", {
      className: (0, _classnames.default)([_BlockExtras.default.root, fullscreen && _BlockExtras.default.hasFullScreen, (blockActions || markers.length > 0) && _BlockExtras.default.withSomething, errors.length > 0 && _BlockExtras.default.withError, warnings.length > 0 && !errors.length && _BlockExtras.default.withWarning])
    }, _react.default.createElement("div", {
      className: _BlockExtras.default.content
    }, markers.length > 0 && _react.default.createElement("div", {
      className: _BlockExtras.default.markers
    }, _react.default.createElement(_blockMarkers.default, {
      className: _BlockExtras.default.markers,
      editor: editor,
      markers: markers,
      scopedValidation: scopedValidation,
      onFocus: onFocus,
      renderCustomMarkers: renderCustomMarkers
    })), blockActions && _react.default.createElement("div", {
      className: _BlockExtras.default.blockActions
    }, blockActions)));
  }

}

exports.default = BlockExtras;

_defineProperty(BlockExtras, "defaultProps", {
  markers: [],
  blockActions: null,
  renderCustomMarkers: null
});