"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var checkCors = () => Promise.all([_client.default.request({
  uri: '/ping',
  withCredentials: false
}).then(() => true), _client.default.request({
  uri: '/users/me',
  withCredentials: false
}).then(() => true).catch(() => false)]).then(res => ({
  isCorsError: res[0] && !res[1],
  pingResponded: res[0]
})).catch(error => ({
  error
}));

var linkRel = 'noopener noreferrer';

class CorsCheck extends _react.PureComponent {
  constructor() {
    super(...arguments);
    this.state = {
      isLoading: true
    };
  }

  componentWillMount() {
    checkCors().then(res => this.setState({
      result: res,
      isLoading: false
    }));
  }

  renderWrapper(content) {
    var result = this.state.result;
    var response = result && result.error && result.error.response;
    var message = response && response.body && response.body.message;

    if (!message) {
      return content;
    }

    return _react.default.createElement("div", null, _react.default.createElement("p", null, "Error message:"), _react.default.createElement("pre", null, _react.default.createElement("code", null, response.body.message)), content);
  }

  render() {
    var _this$state = this.state,
        isLoading = _this$state.isLoading,
        result = _this$state.result;
    var origin = window.location.origin || window.location.href.replace(new RegExp(`${window.location.pathname}$`), '');

    if (isLoading) {
      return _react.default.createElement(_spinner.default, {
        fullscreen: true,
        center: true
      });
    }

    var tld = _client.default.config().apiHost.replace(/.*?sanity\.([a-z]+).*/, '$1');

    var projectId = _client.default.config().projectId;

    var corsUrl = `https://manage.sanity.${tld}/projects/${projectId}/settings/api`;
    var response = result.error && result.error.response;

    if (response) {
      var is404 = response.statusCode === 404;
      var errType = response.body.attributes && response.body.attributes.type;

      if (is404 && errType === 'project') {
        return _react.default.createElement("div", null, _react.default.createElement("p", null, response.body.message || response.statusCode), _react.default.createElement("p", null, "Double-check that your ", _react.default.createElement("code", null, "sanity.json"), " points to the right project ID?"));
      }
    }

    if (result.isCorsError) {
      return this.renderWrapper(_react.default.createElement("p", null, "It seems the error could be caused by the current origin (", _react.default.createElement("code", null, origin), ") not being an allowed origin for this project. If you are an administrator or developer of the project, you can head to", ' ', _react.default.createElement("a", {
        rel: linkRel,
        target: "_blank",
        href: corsUrl
      }, "the project management"), ' ', "interface and add the origin under the ", _react.default.createElement("em", null, "CORS Origins"), " section."));
    }

    if (result.pingResponded) {
      return this.renderWrapper(_react.default.createElement("p", null, "The cause of this error is a little uncertain. It could be a temporary glitch, in which case you might want to try hitting the ", _react.default.createElement("strong", null, "Retry"), " button below. If you are the developer of this project, you could take a look at the browsers developer console and see if any issues are reported there."));
    }

    return this.renderWrapper(_react.default.createElement("p", null, "It might be that your internet connection is unstable or down, or it ", _react.default.createElement("em", null, "might"), " be the Sanity API is having some issues, in which case it should hopefully be back up soon! You could also try hitting the ", _react.default.createElement("strong", null, "Retry"), " button and see if it was just a temporary glitch."));
  }

}

var _default = CorsCheck;
exports.default = _default;