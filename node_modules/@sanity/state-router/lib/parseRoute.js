"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseRoute;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const VALID_PARAM_SEGMENT = /^[a-zA-Z0-9_-]+$/;

function createSegment(segment) {
  if (!segment) {
    return null;
  }

  if (segment.startsWith(':')) {
    const paramName = segment.substring(1);

    if (!VALID_PARAM_SEGMENT.test(paramName)) {
      const addendum = segment.includes('*') ? ' Splats are not supported. Consider using child routes instead' : ''; // eslint-disable-next-line no-console

      console.error(new Error(`Warning: Param segments "${segment}" includes invalid characters.${addendum}`));
    }

    return {
      type: 'param',
      name: paramName
    };
  }

  return {
    type: 'dir',
    name: segment
  };
}

function parseRoute(route) {
  const _route$split = route.split('?'),
        _route$split2 = _slicedToArray(_route$split, 1),
        pathname = _route$split2[0];

  const segments = pathname.split('/').map(createSegment).filter(Boolean);
  return {
    raw: route,
    segments: segments
  };
}