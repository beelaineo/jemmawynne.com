import { ListBuilder, ListInput } from './List';
import { getDocumentTypeListItems, getDocumentTypeListItem, getDocumentTypeList } from './documentTypeListItems';
import { MenuItemBuilder, MenuItem } from './MenuItem';
import { ListItemBuilder, ListItemInput } from './ListItem';
import { MenuItemGroup, MenuItemGroupBuilder } from './MenuItemGroup';
import { DocumentListBuilder, DocumentListInput } from './DocumentList';
import { EditorBuilder } from './Editor';
import { EditorNode, Divider } from './StructureNodes';
import { SerializeError } from './SerializeError';
import { ComponentInput, ComponentBuilder } from './Component';
import { DocumentListItemBuilder, DocumentListItemInput } from './DocumentListItem';
import { Ordering } from './Sort';
declare const StructureBuilder: {
    documentTypeList: typeof getDocumentTypeList;
    documentTypeListItem: typeof getDocumentTypeListItem;
    documentTypeListItems: typeof getDocumentTypeListItems;
    list: (spec?: ListInput | undefined) => ListBuilder;
    listItem: (spec?: ListItemInput | undefined) => ListItemBuilder;
    menuItem: (spec?: MenuItem | undefined) => MenuItemBuilder;
    menuItemGroup: (spec?: MenuItemGroup | undefined) => MenuItemGroupBuilder;
    documentList: (spec?: DocumentListInput | undefined) => DocumentListBuilder;
    documentListItem: (spec?: DocumentListItemInput | undefined) => DocumentListItemBuilder;
    orderingMenuItem: (ordering: Ordering) => MenuItemBuilder;
    orderingMenuItemsForType: (type: string) => any;
    editor: (spec?: EditorNode | undefined) => EditorBuilder;
    component: (spec?: Function | ComponentInput | undefined) => ComponentBuilder;
    divider: () => Divider;
};
export { StructureBuilder, SerializeError };
