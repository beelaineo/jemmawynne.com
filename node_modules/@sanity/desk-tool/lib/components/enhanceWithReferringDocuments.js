"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = enhanceWithReferringDocuments;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _withReferringDocuments = require("part:@sanity/base/with-referring-documents");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function enhanceWithReferringDocuments(Component) {
  function EnhancedWithReferringDocuments(props) {
    // eslint-disable-next-line react/no-multi-comp
    var renderChild = (_ref) => {
      var isLoading = _ref.isLoading,
          referringDocuments = _ref.referringDocuments;
      return _react.default.createElement(Component, _extends({}, props, {
        referringDocuments: referringDocuments,
        isCheckingReferringDocuments: isLoading
      }));
    };

    return props.published ? _react.default.createElement(_withReferringDocuments.WithReferringDocuments, {
      id: props.published._id
    }, renderChild) : renderChild({
      referringDocuments: [],
      isLoading: false
    });
  }

  EnhancedWithReferringDocuments.displayName = "enhanceWithReferringDocuments(".concat(Component.displayName || Component.name, ")");
  EnhancedWithReferringDocuments.propTypes = {
    published: _propTypes.default.object
  };
  return EnhancedWithReferringDocuments;
}