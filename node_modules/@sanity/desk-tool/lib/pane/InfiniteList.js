"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactTinyVirtualList = _interopRequireDefault(require("react-tiny-virtual-list"));

var _enhanceWithAvailHeight = _interopRequireDefault(require("./enhanceWithAvailHeight"));

var _class, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = (0, _enhanceWithAvailHeight.default)((_temp = _class = class InfiniteList extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      triggerUpdate: 0,
      itemSize: undefined // @todo replace this with a something proper. This is hacky.
      // eslint-disable-next-line camelcase

    });

    _defineProperty(this, "setMeasureElement", element => {
      if (element && element.offsetHeight) {
        this.setState({
          itemSize: element.offsetHeight
        });
      }
    });

    _defineProperty(this, "renderItem", (_ref) => {
      var index = _ref.index,
          style = _ref.style;
      var _this$props = this.props,
          renderItem = _this$props.renderItem,
          getItemKey = _this$props.getItemKey,
          items = _this$props.items;
      var item = items[index];
      return _react.default.createElement("div", {
        key: getItemKey(item),
        style: style
      }, renderItem(item, index));
    });
  }

  UNSAFE_componentWillReceiveProps(prevProps) {
    if (prevProps.items !== this.props.items) {
      /**
       * This is needed to break equality checks
       * in VirtualList's sCU in cases where itemCount has not changed,
       * but an elements has been removed or added
       */
      this.setState({
        triggerUpdate: Math.random()
      });
    }

    if (prevProps.layout !== this.props.layout) {
      this.setState({
        itemSize: undefined
      });
    }
  }

  render() {
    var _this$props2 = this.props,
        layout = _this$props2.layout,
        height = _this$props2.height,
        items = _this$props2.items,
        className = _this$props2.className,
        renderItem = _this$props2.renderItem;
    var _this$state = this.state,
        triggerUpdate = _this$state.triggerUpdate,
        itemSize = _this$state.itemSize;

    if (!items || items.length === 0) {
      return _react.default.createElement("div", null);
    }

    if (!itemSize && items) {
      return _react.default.createElement("div", {
        ref: this.setMeasureElement
      }, renderItem(items[0], 0));
    }

    return _react.default.createElement(_reactTinyVirtualList.default, {
      key: layout // forcefully re-render the whole list when layout changes
      ,
      "data-trigger-update-hack": triggerUpdate // see componentWillReceiveProps above
      ,
      onScroll: this.props.onScroll,
      className: className || '',
      height: height,
      itemCount: items.length,
      itemSize: itemSize,
      renderItem: this.renderItem,
      overscanCount: 50
    });
  }

}, _defineProperty(_class, "propTypes", {
  height: _propTypes.default.number,
  items: _propTypes.default.array,
  // eslint-disable-line react/forbid-prop-types
  renderItem: _propTypes.default.func,
  className: _propTypes.default.string,
  getItemKey: _propTypes.default.func,
  layout: _propTypes.default.oneOf(['default', 'detail', 'card', 'media']),
  onScroll: _propTypes.default.func
}), _defineProperty(_class, "defaultProps", {
  layout: 'default',
  items: [],
  height: 250
}), _temp));

exports.default = _default;