"use strict";

/**
 * Modified version of fast-deep-equal (https://github.com/epoberezkin/fast-deep-equal)
 * MIT-licensed, copyright (c) 2017 Evgeny Poberezkin
 **/

/* eslint max-depth: 4 */
module.exports = function equal(a, b) {
  if (a === b) {
    return true;
  }

  var arrA = Array.isArray(a);
  var arrB = Array.isArray(b);

  if (arrA && arrB) {
    if (a.length != b.length) return false;

    for (var i = 0; i < a.length; i++) {
      if (!equal(a[i], b[i])) {
        return false;
      }
    }

    return true;
  }

  if (arrA != arrB) {
    return false;
  }

  if (a && b && typeof a === 'object' && typeof b === 'object') {
    var keys = Object.keys(a);

    if (keys.length !== Object.keys(b).length) {
      return false;
    }

    var dateA = a instanceof Date;
    var dateB = b instanceof Date;

    if (dateA && dateB) {
      return a.getTime() === b.getTime();
    }

    if (dateA != dateB) {
      return false;
    }

    var regexpA = a instanceof RegExp;
    var regexpB = b instanceof RegExp;

    if (regexpA && regexpB) {
      return a.toString() == b.toString();
    }

    if (regexpA != regexpB) {
      return false;
    }

    for (var _i = 0; _i < keys.length; _i++) {
      if (keys[_i] === '_key') {
        continue;
      }

      if (!Object.prototype.hasOwnProperty.call(b, keys[_i])) {
        return false;
      }
    }

    for (var _i2 = 0; _i2 < keys.length; _i2++) {
      if (keys[_i2] === '_key') {
        continue;
      }

      if (!equal(a[keys[_i2]], b[keys[_i2]])) {
        return false;
      }
    }

    return true;
  }

  return false;
};