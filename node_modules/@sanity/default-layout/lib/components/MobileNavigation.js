"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _LoginStatus = _interopRequireDefault(require("./LoginStatus"));

var _toolSwitcher = _interopRequireDefault(require("part:@sanity/default-layout/tool-switcher"));

var _MobileNavigation = _interopRequireDefault(require("./styles/MobileNavigation.css"));

var _Branding = _interopRequireDefault(require("./Branding"));

var _hamburgerIcon = _interopRequireDefault(require("part:@sanity/base/hamburger-icon"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _Search = _interopRequireDefault(require("./Search"));

var _router = require("part:@sanity/base/router");

var _SpaceSwitcher = _interopRequireDefault(require("./SpaceSwitcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MobileNavigation extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      isOpen: false
    });

    _defineProperty(this, "handleOpen", event => {
      this.setState({
        isOpen: true
      });
    });

    _defineProperty(this, "handleClose", event => {
      this.setState({
        isOpen: false
      });
    });

    _defineProperty(this, "handleToggle", () => {
      this.setState({
        isOpen: !this.state.isOpen
      });
    });
  }

  render() {
    var isOpen = this.state.isOpen;
    var tools = this.props.tools;
    return _react.default.createElement("div", {
      className: _MobileNavigation.default.root
    }, _react.default.createElement(_default.default, {
      kind: "simple",
      className: _MobileNavigation.default.hamburgerButton,
      onClick: this.handleToggle,
      title: "Menu",
      icon: _hamburgerIcon.default
    }), _react.default.createElement("div", {
      className: _MobileNavigation.default.headerBackground
    }), _react.default.createElement("div", {
      className: "".concat(isOpen ? _MobileNavigation.default.menuOpen : _MobileNavigation.default.menuClosed)
    }, _react.default.createElement("div", {
      className: _MobileNavigation.default.searchContainer
    }, _react.default.createElement(_Search.default, {
      onSelect: this.handleClose
    })), _react.default.createElement(_SpaceSwitcher.default, null), _react.default.createElement(_LoginStatus.default, {
      className: _MobileNavigation.default.loginStatus
    }), _react.default.createElement(_router.WithRouter, null, router => _react.default.createElement(_toolSwitcher.default, {
      tools: tools,
      activeToolName: router.state.tool,
      className: _MobileNavigation.default.toolSwitcher,
      onClick: this.handleClose
    }))));
  }

}

exports.default = MobileNavigation;

_defineProperty(MobileNavigation, "propTypes", {
  tools: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string
  }))
});