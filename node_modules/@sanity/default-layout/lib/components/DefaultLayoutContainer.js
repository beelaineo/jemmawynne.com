"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _loginWrapper = _interopRequireDefault(require("part:@sanity/base/login-wrapper?"));

var _router = require("part:@sanity/base/router");

var _appLoadingScreen = _interopRequireDefault(require("part:@sanity/base/app-loading-screen"));

var urlStateStore = _interopRequireWildcard(require("../datastores/urlState"));

var _getOrderedTools = _interopRequireDefault(require("../util/getOrderedTools"));

var _defaultLayoutRouter = _interopRequireWildcard(require("../defaultLayoutRouter"));

var _DefaultLayout = _interopRequireDefault(require("./DefaultLayout"));

var _NotFound = _interopRequireDefault(require("./NotFound"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var handleNavigate = urlStateStore.navigate;

class DefaultLayoutContainer extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {});
  }

  componentWillMount() {
    (0, _defaultLayoutRouter.maybeRedirectToBase)();
    this.urlStateSubscription = urlStateStore.state.subscribe({
      next: event => this.setState({
        urlState: event.state,
        isNotFound: event.isNotFound,
        intent: event.intent
      })
    });
  }

  componentWillUnmount() {
    this.urlStateSubscription.unsubscribe();
  }

  render() {
    var _this$state = this.state,
        intent = _this$state.intent,
        urlState = _this$state.urlState,
        isNotFound = _this$state.isNotFound;
    var tools = (0, _getOrderedTools.default)();
    var content = isNotFound ? _react.default.createElement(_NotFound.default, null, intent && _react.default.createElement("div", null, "No tool can handle the intent: ", _react.default.createElement("strong", null, intent.name), " with parameters", ' ', _react.default.createElement("pre", null, JSON.stringify(intent.params)))) : _react.default.createElement(_DefaultLayout.default, {
      tools: tools
    });

    var router = _react.default.createElement(_router.RouterProvider, {
      router: _defaultLayoutRouter.default,
      state: urlState,
      onNavigate: handleNavigate
    }, content);

    return _loginWrapper.default ? _react.default.createElement(_loginWrapper.default, {
      LoadingScreen: _react.default.createElement(_appLoadingScreen.default, {
        text: "Logging in"
      })
    }, router) : router;
  }

}

exports.default = DefaultLayoutContainer;