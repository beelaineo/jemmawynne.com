"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _path = _interopRequireDefault(require("path"));

var _which = _interopRequireDefault(require("which"));

var _isInstalledGlobally = _interopRequireDefault(require("is-installed-globally"));

var _debug = _interopRequireDefault(require("../debug"));

var _package = require("../../package.json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getUpgradeCommand(options = {}) {
  let {
    cwd,
    workDir
  } = options;
  cwd = cwd || process.cwd();
  workDir = workDir || cwd;

  if (_isInstalledGlobally.default && isInstalledUsingYarn()) {
    (0, _debug.default)('CLI is installed globally with yarn');
    return `yarn global add ${_package.name}`;
  }

  if (_isInstalledGlobally.default) {
    (0, _debug.default)('CLI is installed globally with npm');
    return `npm install -g ${_package.name}`;
  }

  const cmds = cwd === workDir ? [] : [`cd ${_path.default.relative(cwd, workDir)}`];
  const hasGlobalYarn = Boolean(_which.default.sync('yarn', {
    nothrow: true
  }));

  if (hasGlobalYarn) {
    cmds.push(`yarn upgrade ${_package.name}`);
  } else {
    cmds.push(`./node_modules/.bin/sanity upgrade ${_package.name}`);
  }

  return cmds.join(' && ');
}

function isInstalledUsingYarn() {
  const isWindows = process.platform === 'win32';
  const yarnPath = isWindows ? _path.default.join('Yarn', 'config', 'global') : _path.default.join('.config', 'yarn', 'global');
  return __dirname.includes(yarnPath);
}

var _default = getUpgradeCommand;
exports.default = _default;