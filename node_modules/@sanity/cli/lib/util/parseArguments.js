"use strict";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint-disable id-length */
const minimist = require('minimist');

module.exports = function parseArguments(argv = process.argv) {
  // prettier-ignore
  const _minimist = minimist(argv.slice(2), {
    '--': true,
    boolean: ['h', 'help', 'd', 'debug', 'v', 'version']
  }),
        {
    _,
    h,
    help,
    d,
    debug,
    v,
    version,
    '--': extraArguments
  } = _minimist,
        extOptions = _objectWithoutProperties(_minimist, ["_", "h", "help", "d", "debug", "v", "version", "--"]);

  const [groupOrCommand, ...argsWithoutOptions] = _;
  return {
    groupOrCommand,
    // prettier-ignore
    coreOptions: {
      h,
      help,
      d,
      debug,
      v,
      version
    },
    extOptions,
    // forwarded to commands
    argsWithoutOptions,
    // remaining arguments
    extraArguments // arguments after the ended argument list (--)

  };
};