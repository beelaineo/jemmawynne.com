"use strict";

var _client = _interopRequireDefault(require("@sanity/client"));

var _configSanity = _interopRequireDefault(require("config:sanity"));

var _configureClient = _interopRequireDefault(require("part:@sanity/base/configure-client?"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var deprecationMessage = "[deprecation] The Sanity client is now exposed in CommonJS format.\n\nFor instance, change:\n  `const client = require('part:@sanity/base/client').default`\n\nTo the following:\n  `const client = require('part:@sanity/base/client')`\n";

var apiConfig = _objectSpread({}, _configSanity.default.api, {
  withCredentials: true,
  useCdn: false
});

var client = (0, _client.default)(apiConfig);
var configuredClient = _configureClient.default ? (0, _configureClient.default)((0, _client.default)(apiConfig)) : client; // Warn when people use `.default`

Object.defineProperty(configuredClient, 'default', {
  get() {
    // eslint-disable-next-line no-console
    console.warn(deprecationMessage);
    return configuredClient;
  }

}); // Expose as CJS to allow Node scripts to consume it without `.default`

module.exports = configuredClient;