"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isActionEnabled = exports.resolveEnabledActions = void 0;

var _difference2 = _interopRequireDefault(require("lodash/difference"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ACTIONS_FLAG = '__experimental_actions';
var DEFAULT_ACTIONS = ['create', 'update', 'delete', 'publish'];
var VALID_ACTIONS = DEFAULT_ACTIONS;

var readActions = schemaType => ACTIONS_FLAG in schemaType ? schemaType[ACTIONS_FLAG] : DEFAULT_ACTIONS;

var validateActions = (typeName, actions) => {
  if (!Array.isArray(actions)) {
    throw new Error("The value of <type>.".concat(ACTIONS_FLAG, " should be an array with any of the actions ").concat(VALID_ACTIONS.join(', ')));
  }

  var invalid = (0, _difference2.default)(actions, VALID_ACTIONS);

  if (invalid.length > 0) {
    throw new Error("Invalid action".concat(invalid.length > 1 ? 's' : '', " configured for schema type \"").concat(typeName, "\": ").concat(invalid.join(', '), ". Valid actions are: ").concat(VALID_ACTIONS.join(', ')));
  }

  return actions;
};

var resolveEnabledActions = schemaType => validateActions(schemaType.name, readActions(schemaType));

exports.resolveEnabledActions = resolveEnabledActions;

var isActionEnabled = (schemaType, action) => resolveEnabledActions(schemaType).includes(action);

exports.isActionEnabled = isActionEnabled;