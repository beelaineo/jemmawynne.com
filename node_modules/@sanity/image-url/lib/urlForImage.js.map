{"version":3,"sources":["../src/urlForImage.js"],"names":["SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","source","image","asset","_ref","_id","crop","left","Math","round","width","top","height","right","bottom","hotSpotVerticalRadius","hotspot","hotSpotHorizontalRadius","hotSpotCenterX","x","hotSpotCenterY","y","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","filename","id","format","projectId","dataset","params","isEffectiveCrop","push","bg","flipHorizontal","flipVertical","forEach","mapping","specName","param","encodeURIComponent","length","join","result","desiredAspectRatio","cropAspectRatio","hotspotXCenter","hotspotYCenter","max","floor"],"mappings":"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","sourcesContent":["import parseSource from './parseSource'\nimport parseAssetId from './parseAssetId'\n\nconst SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n  ['width', 'w'],\n  ['height', 'h'],\n  ['format', 'fm'],\n  ['download', 'dl'],\n  ['blur', 'blur'],\n  ['sharpen', 'sharp'],\n  ['invert', 'invert'],\n  ['orientation', 'or'],\n  ['minHeight', 'min-h'],\n  ['maxHeight', 'max-h'],\n  ['minWidth', 'min-w'],\n  ['maxWidth', 'max-w'],\n  ['quality', 'q'],\n  ['fit', 'fit'],\n  ['crop', 'crop'],\n  ['auto', 'auto']\n]\n\nexport default function urlForImage(options) {\n  let spec = {...(options || {})}\n  const source = spec.source\n  delete spec.source\n\n  const image = parseSource(source)\n  if (!image) {\n    return null\n  }\n\n  const asset = parseAssetId(image.asset._ref || image.asset._id)\n\n  // Compute crop rect in terms of pixel coordinates in the raw source image\n  const crop = {\n    left: Math.round(image.crop.left * asset.width),\n    top: Math.round(image.crop.top * asset.height)\n  }\n\n  crop.width = Math.round(asset.width - image.crop.right * asset.width - crop.left)\n  crop.height = Math.round(asset.height - image.crop.bottom * asset.height - crop.top)\n\n  // Compute hot spot rect in terms of pixel coordinates\n  const hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2\n  const hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2\n  const hotSpotCenterX = image.hotspot.x * asset.width\n  const hotSpotCenterY = image.hotspot.y * asset.height\n  const hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius\n  }\n\n  spec.asset = asset\n\n  // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = {...spec, ...fit({crop, hotspot}, spec)}\n  }\n\n  return specToImageUrl(spec)\n}\n\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec) {\n  const cdnUrl = spec.baseUrl || 'https://cdn.sanity.io'\n  const filename = `${spec.asset.id}-${spec.asset.width}x${spec.asset.height}.${spec.asset.format}`\n  const baseUrl = `${cdnUrl}/images/${spec.projectId}/${spec.dataset}/${filename}`\n\n  const params = []\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    const isEffectiveCrop =\n      spec.rect.left != 0 ||\n      spec.rect.top != 0 ||\n      spec.rect.height != spec.asset.height ||\n      spec.rect.width != spec.asset.width\n    if (isEffectiveCrop) {\n      params.push(`rect=${spec.rect.left},${spec.rect.top},${spec.rect.width},${spec.rect.height}`)\n    }\n  }\n\n  if (spec.bg) {\n    params.push(`bg=${spec.bg}`)\n  }\n\n  if (spec.focalPoint) {\n    params.push(`fp-x=${spec.focalPoint.x}`)\n    params.push(`fp-x=${spec.focalPoint.y}`)\n  }\n\n  if (spec.flipHorizontal || spec.flipVertical) {\n    params.push(`flip=${spec.flipHorizontal ? 'h' : ''}${spec.flipVertical ? 'v' : ''}`)\n  }\n\n  // Map from spec name to url param name, and allow using the actual param name as an alternative\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(mapping => {\n    const [specName, param] = mapping\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[specName])}`)\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[param])}`)\n    }\n  })\n\n  if (params.length === 0) {\n    return baseUrl\n  }\n\n  return `${baseUrl}?${params.join('&')}`\n}\n\nfunction fit(source, spec) {\n  const result = {\n    width: spec.width,\n    height: spec.height\n  }\n\n  // If we are not constraining the aspect ratio, we'll just use the whole crop\n  if (!(spec.width && spec.height)) {\n    result.rect = source.crop\n    return result\n  }\n\n  const crop = source.crop\n  const hotspot = source.hotspot\n\n  // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n  const desiredAspectRatio = spec.width / spec.height\n  const cropAspectRatio = crop.width / crop.height\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    const height = crop.height\n    const width = height * desiredAspectRatio\n    const top = crop.top\n    // Center output horizontally over hotspot\n    const hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left\n    let left = hotspotXCenter - width / 2\n    // Keep output within crop\n    if (left < crop.left) {\n      left = crop.left\n    } else if (left + width > crop.left + crop.width) {\n      left = crop.left + crop.width - width\n    }\n    result.rect = {\n      left: Math.round(left),\n      top: Math.round(top),\n      width: Math.round(width),\n      height: Math.round(height)\n    }\n    return result\n  }\n  // The crop is taller than the desired ratio, we are cutting from top and bottom\n  const width = crop.width\n  const height = width / desiredAspectRatio\n  const left = crop.left\n  // Center output vertically over hotspot\n  const hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top\n  let top = hotspotYCenter - height / 2\n  // Keep output rect within crop\n  if (top < crop.top) {\n    top = crop.top\n  } else if (top + height > crop.top + crop.height) {\n    top = crop.top + crop.height - height\n  }\n  result.rect = {\n    left: Math.max(0, Math.floor(left)),\n    top: Math.max(0, Math.floor(top)),\n    width: Math.round(width),\n    height: Math.round(height)\n  }\n  return result\n}\n\n// For backwards-compatibility\nexport {parseSource}\n"],"file":"urlForImage.js"}