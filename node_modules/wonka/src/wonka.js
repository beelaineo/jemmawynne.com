

import * as WonkaJs from "./web/wonkaJs.js";
import * as Wonka_source_make from "./sources/wonka_source_make.js";
import * as Wonka_operator_map from "./operators/wonka_operator_map.js";
import * as Wonka_sink_publish from "./sinks/wonka_sink_publish.js";
import * as Wonka_operator_scan from "./operators/wonka_operator_scan.js";
import * as Wonka_operator_skip from "./operators/wonka_operator_skip.js";
import * as Wonka_operator_take from "./operators/wonka_operator_take.js";
import * as Wonka_operator_onEnd from "./operators/wonka_operator_onEnd.js";
import * as Wonka_operator_share from "./operators/wonka_operator_share.js";
import * as Wonka_sink_subscribe from "./sinks/wonka_sink_subscribe.js";
import * as Wonka_operator_filter from "./operators/wonka_operator_filter.js";
import * as Wonka_operator_onPush from "./operators/wonka_operator_onPush.js";
import * as Wonka_source_fromList from "./sources/wonka_source_fromList.js";
import * as Wonka_operator_combine from "./operators/wonka_operator_combine.js";
import * as Wonka_operator_onStart from "./operators/wonka_operator_onStart.js";
import * as Wonka_source_fromArray from "./sources/wonka_source_fromArray.js";
import * as Wonka_source_fromValue from "./sources/wonka_source_fromValue.js";
import * as Wonka_operator_mergeMap from "./operators/wonka_operator_mergeMap.js";
import * as Wonka_operator_takeLast from "./operators/wonka_operator_takeLast.js";
import * as Wonka_source_primitives from "./sources/wonka_source_primitives.js";
import * as Wonka_operator_concatMap from "./operators/wonka_operator_concatMap.js";
import * as Wonka_operator_skipUntil from "./operators/wonka_operator_skipUntil.js";
import * as Wonka_operator_skipWhile from "./operators/wonka_operator_skipWhile.js";
import * as Wonka_operator_switchMap from "./operators/wonka_operator_switchMap.js";
import * as Wonka_operator_takeUntil from "./operators/wonka_operator_takeUntil.js";
import * as Wonka_operator_takeWhile from "./operators/wonka_operator_takeWhile.js";
import * as Wonka_source_makeSubject from "./sources/wonka_source_makeSubject.js";

var Types = 0;

var fromArray = Wonka_source_fromArray.fromArray;

var fromList = Wonka_source_fromList.fromList;

var fromValue = Wonka_source_fromValue.fromValue;

var make = Wonka_source_make.make;

var makeSubject = Wonka_source_makeSubject.makeSubject;

var empty = Wonka_source_primitives.empty;

var never = Wonka_source_primitives.never;

var combine = Wonka_operator_combine.combine;

var concatMap = Wonka_operator_concatMap.concatMap;

var concat = Wonka_operator_concatMap.concat;

var concatAll = Wonka_operator_concatMap.concatAll;

var filter = Wonka_operator_filter.filter;

var map = Wonka_operator_map.map;

var mergeMap = Wonka_operator_mergeMap.mergeMap;

var merge = Wonka_operator_mergeMap.merge;

var mergeAll = Wonka_operator_mergeMap.mergeAll;

var flatten = Wonka_operator_mergeMap.flatten;

var onEnd = Wonka_operator_onEnd.onEnd;

var onPush = Wonka_operator_onPush.onPush;

var tap = Wonka_operator_onPush.tap;

var onStart = Wonka_operator_onStart.onStart;

var scan = Wonka_operator_scan.scan;

var share = Wonka_operator_share.share;

var skip = Wonka_operator_skip.skip;

var skipUntil = Wonka_operator_skipUntil.skipUntil;

var skipWhile = Wonka_operator_skipWhile.skipWhile;

var switchMap = Wonka_operator_switchMap.switchMap;

var switchAll = Wonka_operator_switchMap.switchAll;

var take = Wonka_operator_take.take;

var takeLast = Wonka_operator_takeLast.takeLast;

var takeUntil = Wonka_operator_takeUntil.takeUntil;

var takeWhile = Wonka_operator_takeWhile.takeWhile;

var publish = Wonka_sink_publish.publish;

var subscribe = Wonka_sink_subscribe.subscribe;

var forEach = Wonka_sink_subscribe.forEach;

var debounce = WonkaJs.debounce;

var delay = WonkaJs.delay;

var interval = WonkaJs.interval;

var sample = WonkaJs.sample;

var throttle = WonkaJs.throttle;

var toPromise = WonkaJs.toPromise;

var fromDomEvent = WonkaJs.fromDomEvent;

var fromListener = WonkaJs.fromListener;

var fromPromise = WonkaJs.fromPromise;

export {
  Types ,
  fromArray ,
  fromList ,
  fromValue ,
  make ,
  makeSubject ,
  empty ,
  never ,
  combine ,
  concatMap ,
  concat ,
  concatAll ,
  filter ,
  map ,
  mergeMap ,
  merge ,
  mergeAll ,
  flatten ,
  onEnd ,
  onPush ,
  tap ,
  onStart ,
  scan ,
  share ,
  skip ,
  skipUntil ,
  skipWhile ,
  switchMap ,
  switchAll ,
  take ,
  takeLast ,
  takeUntil ,
  takeWhile ,
  publish ,
  subscribe ,
  forEach ,
  debounce ,
  delay ,
  interval ,
  sample ,
  throttle ,
  toPromise ,
  fromDomEvent ,
  fromListener ,
  fromPromise ,
  
}
/* No side effect */
