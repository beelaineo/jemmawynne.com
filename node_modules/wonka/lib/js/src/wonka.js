'use strict';

var WonkaJs = require("./web/wonkaJs.js");
var Wonka_source_make = require("./sources/wonka_source_make.js");
var Wonka_operator_map = require("./operators/wonka_operator_map.js");
var Wonka_sink_publish = require("./sinks/wonka_sink_publish.js");
var Wonka_operator_scan = require("./operators/wonka_operator_scan.js");
var Wonka_operator_skip = require("./operators/wonka_operator_skip.js");
var Wonka_operator_take = require("./operators/wonka_operator_take.js");
var Wonka_operator_onEnd = require("./operators/wonka_operator_onEnd.js");
var Wonka_operator_share = require("./operators/wonka_operator_share.js");
var Wonka_sink_subscribe = require("./sinks/wonka_sink_subscribe.js");
var Wonka_operator_filter = require("./operators/wonka_operator_filter.js");
var Wonka_operator_onPush = require("./operators/wonka_operator_onPush.js");
var Wonka_source_fromList = require("./sources/wonka_source_fromList.js");
var Wonka_operator_combine = require("./operators/wonka_operator_combine.js");
var Wonka_operator_onStart = require("./operators/wonka_operator_onStart.js");
var Wonka_source_fromArray = require("./sources/wonka_source_fromArray.js");
var Wonka_source_fromValue = require("./sources/wonka_source_fromValue.js");
var Wonka_operator_mergeMap = require("./operators/wonka_operator_mergeMap.js");
var Wonka_operator_takeLast = require("./operators/wonka_operator_takeLast.js");
var Wonka_source_primitives = require("./sources/wonka_source_primitives.js");
var Wonka_operator_concatMap = require("./operators/wonka_operator_concatMap.js");
var Wonka_operator_skipUntil = require("./operators/wonka_operator_skipUntil.js");
var Wonka_operator_skipWhile = require("./operators/wonka_operator_skipWhile.js");
var Wonka_operator_switchMap = require("./operators/wonka_operator_switchMap.js");
var Wonka_operator_takeUntil = require("./operators/wonka_operator_takeUntil.js");
var Wonka_operator_takeWhile = require("./operators/wonka_operator_takeWhile.js");
var Wonka_source_makeSubject = require("./sources/wonka_source_makeSubject.js");

var Types = 0;

var fromArray = Wonka_source_fromArray.fromArray;

var fromList = Wonka_source_fromList.fromList;

var fromValue = Wonka_source_fromValue.fromValue;

var make = Wonka_source_make.make;

var makeSubject = Wonka_source_makeSubject.makeSubject;

var empty = Wonka_source_primitives.empty;

var never = Wonka_source_primitives.never;

var combine = Wonka_operator_combine.combine;

var concatMap = Wonka_operator_concatMap.concatMap;

var concat = Wonka_operator_concatMap.concat;

var concatAll = Wonka_operator_concatMap.concatAll;

var filter = Wonka_operator_filter.filter;

var map = Wonka_operator_map.map;

var mergeMap = Wonka_operator_mergeMap.mergeMap;

var merge = Wonka_operator_mergeMap.merge;

var mergeAll = Wonka_operator_mergeMap.mergeAll;

var flatten = Wonka_operator_mergeMap.flatten;

var onEnd = Wonka_operator_onEnd.onEnd;

var onPush = Wonka_operator_onPush.onPush;

var tap = Wonka_operator_onPush.tap;

var onStart = Wonka_operator_onStart.onStart;

var scan = Wonka_operator_scan.scan;

var share = Wonka_operator_share.share;

var skip = Wonka_operator_skip.skip;

var skipUntil = Wonka_operator_skipUntil.skipUntil;

var skipWhile = Wonka_operator_skipWhile.skipWhile;

var switchMap = Wonka_operator_switchMap.switchMap;

var switchAll = Wonka_operator_switchMap.switchAll;

var take = Wonka_operator_take.take;

var takeLast = Wonka_operator_takeLast.takeLast;

var takeUntil = Wonka_operator_takeUntil.takeUntil;

var takeWhile = Wonka_operator_takeWhile.takeWhile;

var publish = Wonka_sink_publish.publish;

var subscribe = Wonka_sink_subscribe.subscribe;

var forEach = Wonka_sink_subscribe.forEach;

var debounce = WonkaJs.debounce;

var delay = WonkaJs.delay;

var interval = WonkaJs.interval;

var sample = WonkaJs.sample;

var throttle = WonkaJs.throttle;

var toPromise = WonkaJs.toPromise;

var fromDomEvent = WonkaJs.fromDomEvent;

var fromListener = WonkaJs.fromListener;

var fromPromise = WonkaJs.fromPromise;

exports.Types = Types;
exports.fromArray = fromArray;
exports.fromList = fromList;
exports.fromValue = fromValue;
exports.make = make;
exports.makeSubject = makeSubject;
exports.empty = empty;
exports.never = never;
exports.combine = combine;
exports.concatMap = concatMap;
exports.concat = concat;
exports.concatAll = concatAll;
exports.filter = filter;
exports.map = map;
exports.mergeMap = mergeMap;
exports.merge = merge;
exports.mergeAll = mergeAll;
exports.flatten = flatten;
exports.onEnd = onEnd;
exports.onPush = onPush;
exports.tap = tap;
exports.onStart = onStart;
exports.scan = scan;
exports.share = share;
exports.skip = skip;
exports.skipUntil = skipUntil;
exports.skipWhile = skipWhile;
exports.switchMap = switchMap;
exports.switchAll = switchAll;
exports.take = take;
exports.takeLast = takeLast;
exports.takeUntil = takeUntil;
exports.takeWhile = takeWhile;
exports.publish = publish;
exports.subscribe = subscribe;
exports.forEach = forEach;
exports.debounce = debounce;
exports.delay = delay;
exports.interval = interval;
exports.sample = sample;
exports.throttle = throttle;
exports.toPromise = toPromise;
exports.fromDomEvent = fromDomEvent;
exports.fromListener = fromListener;
exports.fromPromise = fromPromise;
/* No side effect */
