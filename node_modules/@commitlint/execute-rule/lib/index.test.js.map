{"version":3,"sources":["../src/index.test.js"],"names":["t","actual","is","deepEqual","Promise","resolve"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,mBAAK,6BAAL,EAA0CA,CAAN;AAAA;AACpB,wBAAM,iBAAN;AAAA;AAATC,SAAS;;AACfD,KAAEE,EAAF,CAAKD,MAAL,EAAa,IAAb;AADe;AAAA;AAAA;AAAA;AAAA;AADoB,aAApC;;AAKA,mBAAK,sBAAL,EAAmCD,CAAN;AAAA;AACb,wBAAM,gBAAQ,CAAC,MAAD,EAAS,QAAT,CAAR,CAAN;AAAA;AAATC,SAAS;;AACfD,KAAEG,SAAF,CAAYF,MAAZ,EAAoB,CAAC,MAAD,EAAS,QAAT,CAApB;AADe;AAAA;AAAA;AAAA;AAAA;AADa,aAA7B;;AAKA,mBAAK,yBAAL,EAAsCD,CAAN;AAAA;AAChB,wBAAM,gBAAQ,CAAC,MAAD,EAASI,QAAQC,OAAR,CAAgB,QAAhB,CAAT,CAAR,CAAN;AAAA;AAATJ,SAAS;;AACfD,KAAEG,SAAF,CAAYF,MAAZ,EAAoB,CAAC,MAAD,EAAS,QAAT,CAApB;AADe;AAAA;AAAA;AAAA;AAAA;AADgB,aAAhC;;AAKA,mBAAK,2BAAL,EAAwCD,CAAN;AAAA;AAClB,wBAAM,gBAAQ,CAAC,MAAD,EAAS,MAAM,QAAf,CAAR,CAAN;AAAA;AAATC,SAAS;;AACfD,KAAEG,SAAF,CAAYF,MAAZ,EAAoB,CAAC,MAAD,EAAS,QAAT,CAApB;AADe;AAAA;AAAA;AAAA;AAAA;AADkB,aAAlC;;AAKA,mBAAK,iCAAL,EAA8CD,CAAN;AAAA;AACxB,wBAAM,gBAAQ,CAAC,MAAD,EAAS;AAAA,iBAAY,QAAZ;AAAA,cAAT,CAAR,CAAN;AAAA;AAATC,SAAS;;AACfD,KAAEG,SAAF,CAAYF,MAAZ,EAAoB,CAAC,MAAD,EAAS,QAAT,CAApB;AADe;AAAA;AAAA;AAAA;AAAA;AADwB,aAAxC","file":"index.test.js","sourcesContent":["import test from 'ava';\nimport execute from '.';\n\ntest('does nothing without params', async t => {\n\tconst actual = await execute();\n\tt.is(actual, null);\n});\n\ntest('returns plain config', async t => {\n\tconst actual = await execute(['name', 'config']);\n\tt.deepEqual(actual, ['name', 'config']);\n});\n\ntest('unwraps promised config', async t => {\n\tconst actual = await execute(['name', Promise.resolve('config')]);\n\tt.deepEqual(actual, ['name', 'config']);\n});\n\ntest('executes config functions', async t => {\n\tconst actual = await execute(['name', () => 'config']);\n\tt.deepEqual(actual, ['name', 'config']);\n});\n\ntest('executes async config functions', async t => {\n\tconst actual = await execute(['name', async () => 'config']);\n\tt.deepEqual(actual, ['name', 'config']);\n});\n"]}