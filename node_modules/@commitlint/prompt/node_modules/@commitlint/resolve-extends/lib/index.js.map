{"version":3,"sources":["../src/index.js"],"names":["resolveExtends","config","context","e","extends","extended","loadExtends","reduceRight","r","c","objValue","srcValue","console","warn","reduce","configs","raw","load","require","resolved","resolveConfig","cwd","dirname","ctx","parserPreset","resolvedParserPreset","name","path","relative","process","split","sep","join","parserOpts","getId","prefix","first","charAt","scoped","includes","filter","String","resolve","resolveId","id","err","legacy","localPath","resolveFromSilent","globalPath","resolveGlobalSilent","Error","code","resolveGlobal"],"mappings":";;;;;kBAQwBA,c;;AARxB;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACe,SAASA,cAAT,CAAwBC,SAAS,EAAjC,EAAqCC,UAAU,EAA/C,EAAmD;AAAA,OACjDC,CADiD,GAC5CF,MAD4C,CAC1DG,OAD0D;;AAEjE,OAAMC,WAAWC,YAAYL,MAAZ,EAAoBC,OAApB,EAA6BK,WAA7B,CAChB,CAACC,CAAD,EAAIC,CAAJ,KACC,uBAAUD,CAAV,EAAa,kBAAKC,CAAL,EAAQ,SAAR,CAAb,EAAiC,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxD,MAAI,qBAAQD,QAAR,CAAJ,EAAuB;AACtB,UAAOC,QAAP;AACA;AACD,EAJD,CAFe,EAOhBR,IAAI,EAACC,SAASD,CAAV,EAAJ,GAAmB,EAPH,CAAjB;;AAUA;AACA,KAAI,OAAOF,MAAP,KAAkB,QAAlB,IAA8B,eAAeA,MAAjD,EAAyD;AACxDW,UAAQC,IAAR,CACE,6GADF;AAGA;;AAED,QAAO,mBAAM,EAAN,EAAUR,QAAV,EAAoBJ,MAApB,CAAP;AACA;;AAED;AA5ByB;AA6BzB,SAASK,WAAT,CAAqBL,SAAS,EAA9B,EAAkCC,UAAU,EAA5C,EAAgD;AAC/C,QAAO,CAACD,OAAOG,OAAP,IAAkB,EAAnB,EAAuBU,MAAvB,CAA8B,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACtD,QAAMC,OAAOf,QAAQgB,OAAR,IAAmBA,OAAhC;AACA,QAAMC,WAAWC,cAAcJ,GAAd,EAAmBd,OAAnB,CAAjB;AACA,QAAMO,IAAIQ,KAAKE,QAAL,CAAV;AACA,QAAME,MAAM,eAAKC,OAAL,CAAaH,QAAb,CAAZ;;AAEA;AACA,MAAI,OAAOV,CAAP,KAAa,QAAb,IAAyB,eAAeA,CAA5C,EAA+C;AAC9CG,WAAQC,IAAR,CACE,yBAAwBG,GAAI,kEAAiEA,GAAI,4BADnG;AAGA;;AAED,QAAMO,MAAM,mBAAM,EAAN,EAAUrB,OAAV,EAAmB,EAACmB,GAAD,EAAnB,CAAZ;;AAEA;AACA,MACC,CAACnB,QAAQsB,YAAT,IACA,OAAOf,CAAP,KAAa,QADb,IAEA,OAAOA,EAAEe,YAAT,KAA0B,QAH3B,EAIE;AACD,SAAMC,uBAAuB,2BAAYJ,GAAZ,EAAiBZ,EAAEe,YAAnB,CAA7B;AACA,SAAMA,eAAe;AACpBE,UAAMjB,EAAEe,YADY;AAEpBG,UAAO,KAAI,eAAKC,QAAL,CAAcC,QAAQR,GAAR,EAAd,EAA6BI,oBAA7B,CAAmD,EAAxD,CACJK,KADI,CACE,eAAKC,GADP,EAEJC,IAFI,CAEC,GAFD,CAFc;AAKpBC,gBAAYf,QAAQO,oBAAR;AALQ,IAArB;;AAQAF,OAAIC,YAAJ,GAAmBA,YAAnB;AACAvB,UAAOuB,YAAP,GAAsBA,YAAtB;AACA;;AAED,SAAO,CAAC,GAAGT,OAAJ,EAAaN,CAAb,EAAgB,GAAGH,YAAYG,CAAZ,EAAec,GAAf,CAAnB,CAAP;AACA,EAnCM,EAmCJ,EAnCI,CAAP;AAoCA;;AAED,SAASW,KAAT,CAAelB,MAAM,EAArB,EAAyBmB,SAAS,EAAlC,EAAsC;AACrC,OAAMC,QAAQpB,IAAIqB,MAAJ,CAAW,CAAX,CAAd;AACA,OAAMC,SAASF,UAAU,GAAzB;AACA,OAAMR,WAAWQ,UAAU,GAA3B;;AAEA,KAAIE,MAAJ,EAAY;AACX,SAAOtB,IAAIuB,QAAJ,CAAa,GAAb,IAAoBvB,GAApB,GAA0B,CAACA,GAAD,EAAMmB,MAAN,EAAcK,MAAd,CAAqBC,MAArB,EAA6BT,IAA7B,CAAkC,GAAlC,CAAjC;AACA;;AAED,QAAOJ,WAAWZ,GAAX,GAAiB,CAACmB,MAAD,EAASnB,GAAT,EAAcwB,MAAd,CAAqBC,MAArB,EAA6BT,IAA7B,CAAkC,GAAlC,CAAxB;AACA;;AAED,SAASZ,aAAT,CAAuBJ,GAAvB,EAA4Bd,UAAU,EAAtC,EAA0C;AACzC,OAAMwC,UAAUxC,QAAQwC,OAAR,IAAmBC,SAAnC;AACA,OAAMC,KAAKV,MAAMlB,GAAN,EAAWd,QAAQiC,MAAnB,CAAX;;AAEA,KAAI;AACH,SAAOO,QAAQE,EAAR,EAAY1C,OAAZ,CAAP;AACA,EAFD,CAEE,OAAO2C,GAAP,EAAY;AACb,QAAMC,SAASZ,MAAMlB,GAAN,EAAW,oCAAX,CAAf;AACA,QAAMG,WAAWuB,QAAQI,MAAR,EAAgB5C,OAAhB,CAAjB;AACAU,UAAQC,IAAR,CACE,aAAYG,GAAI,qBAAoB8B,MAAO,yDAAwDA,MAAO,kBAAiBF,EAAG,GADhI;AAGA,SAAOzB,QAAP;AACA;AACD;;AAED,SAASwB,SAAT,CAAmBC,EAAnB,EAAuB1C,UAAU,EAAjC,EAAqC;AACpC,OAAMmB,MAAMnB,QAAQmB,GAAR,IAAeQ,QAAQR,GAAR,EAA3B;AACA,OAAM0B,YAAYC,kBAAkB3B,GAAlB,EAAuBuB,EAAvB,CAAlB;;AAEA,KAAI,OAAOG,SAAP,KAAqB,QAAzB,EAAmC;AAClC,SAAOA,SAAP;AACA;;AAED,OAAME,aAAaC,oBAAoBN,EAApB,CAAnB;;AAEA,KAAI,OAAOK,UAAP,KAAsB,QAA1B,EAAoC;AACnC,SAAOA,UAAP;AACA;;AAED,OAAMJ,MAAM,IAAIM,KAAJ,CAAW,uBAAsBP,EAAG,WAAUvB,GAAI,GAAlD,CAAZ;AACAwB,KAAIO,IAAJ,GAAW,kBAAX;AACA,OAAMP,GAAN;AACA;;AAED,SAASG,iBAAT,CAA2B3B,GAA3B,EAAgCuB,EAAhC,EAAoC;AACnC,KAAI;AACH,SAAO,2BAAYvB,GAAZ,EAAiBuB,EAAjB,CAAP;AACA,EAFD,CAEE,OAAOC,GAAP,EAAY,CAAE;AAChB;;AAED,SAASK,mBAAT,CAA6BN,EAA7B,EAAiC;AAChC,KAAI;AACH,QAAMS,gBAAgB,2BAAY,gBAAZ,CAAtB;AACA,SAAOA,cAAcT,EAAd,CAAP;AACA,EAHD,CAGE,OAAOC,GAAP,EAAY,CAAE;AAChB","file":"index.js","sourcesContent":["import path from 'path';\n\nimport 'resolve-global'; // eslint-disable-line import/no-unassigned-import\nimport importFresh from 'import-fresh';\nimport resolveFrom from 'resolve-from';\nimport {isArray, merge, mergeWith, omit} from 'lodash';\n\n// Resolve extend configs\nexport default function resolveExtends(config = {}, context = {}) {\n\tconst {extends: e} = config;\n\tconst extended = loadExtends(config, context).reduceRight(\n\t\t(r, c) =>\n\t\t\tmergeWith(r, omit(c, 'extends'), (objValue, srcValue) => {\n\t\t\t\tif (isArray(objValue)) {\n\t\t\t\t\treturn srcValue;\n\t\t\t\t}\n\t\t\t}),\n\t\te ? {extends: e} : {}\n\t);\n\n\t// Remove deprecation warning in version 3\n\tif (typeof config === 'object' && 'wildcards' in config) {\n\t\tconsole.warn(\n\t\t\t`'wildcards' found in top-level configuration ignored. Remove them from your config to silence this warning.`\n\t\t);\n\t}\n\n\treturn merge({}, extended, config);\n}\n\n// (any, string, string, Function) => any[];\nfunction loadExtends(config = {}, context = {}) {\n\treturn (config.extends || []).reduce((configs, raw) => {\n\t\tconst load = context.require || require;\n\t\tconst resolved = resolveConfig(raw, context);\n\t\tconst c = load(resolved);\n\t\tconst cwd = path.dirname(resolved);\n\n\t\t// Remove deprecation warning in version 3\n\t\tif (typeof c === 'object' && 'wildcards' in c) {\n\t\t\tconsole.warn(\n\t\t\t\t`'wildcards' found in '${raw}' ignored. To silence this warning raise an issue at 'npm repo ${raw}' to remove the wildcards.`\n\t\t\t);\n\t\t}\n\n\t\tconst ctx = merge({}, context, {cwd});\n\n\t\t// Resolve parser preset if none was present before\n\t\tif (\n\t\t\t!context.parserPreset &&\n\t\t\ttypeof c === 'object' &&\n\t\t\ttypeof c.parserPreset === 'string'\n\t\t) {\n\t\t\tconst resolvedParserPreset = resolveFrom(cwd, c.parserPreset);\n\t\t\tconst parserPreset = {\n\t\t\t\tname: c.parserPreset,\n\t\t\t\tpath: `./${path.relative(process.cwd(), resolvedParserPreset)}`\n\t\t\t\t\t.split(path.sep)\n\t\t\t\t\t.join('/'),\n\t\t\t\tparserOpts: require(resolvedParserPreset)\n\t\t\t};\n\n\t\t\tctx.parserPreset = parserPreset;\n\t\t\tconfig.parserPreset = parserPreset;\n\t\t}\n\n\t\treturn [...configs, c, ...loadExtends(c, ctx)];\n\t}, []);\n}\n\nfunction getId(raw = '', prefix = '') {\n\tconst first = raw.charAt(0);\n\tconst scoped = first === '@';\n\tconst relative = first === '.';\n\n\tif (scoped) {\n\t\treturn raw.includes('/') ? raw : [raw, prefix].filter(String).join('/');\n\t}\n\n\treturn relative ? raw : [prefix, raw].filter(String).join('-');\n}\n\nfunction resolveConfig(raw, context = {}) {\n\tconst resolve = context.resolve || resolveId;\n\tconst id = getId(raw, context.prefix);\n\n\ttry {\n\t\treturn resolve(id, context);\n\t} catch (err) {\n\t\tconst legacy = getId(raw, 'conventional-changelog-lint-config');\n\t\tconst resolved = resolve(legacy, context);\n\t\tconsole.warn(\n\t\t\t`Resolving ${raw} to legacy config ${legacy}. To silence this warning raise an issue at 'npm repo ${legacy}' to rename to ${id}.`\n\t\t);\n\t\treturn resolved;\n\t}\n}\n\nfunction resolveId(id, context = {}) {\n\tconst cwd = context.cwd || process.cwd();\n\tconst localPath = resolveFromSilent(cwd, id);\n\n\tif (typeof localPath === 'string') {\n\t\treturn localPath;\n\t}\n\n\tconst globalPath = resolveGlobalSilent(id);\n\n\tif (typeof globalPath === 'string') {\n\t\treturn globalPath;\n\t}\n\n\tconst err = new Error(`Cannot find module \"${id}\" from \"${cwd}\"`);\n\terr.code = 'MODULE_NOT_FOUND';\n\tthrow err;\n}\n\nfunction resolveFromSilent(cwd, id) {\n\ttry {\n\t\treturn resolveFrom(cwd, id);\n\t} catch (err) {}\n}\n\nfunction resolveGlobalSilent(id) {\n\ttry {\n\t\tconst resolveGlobal = importFresh('resolve-global');\n\t\treturn resolveGlobal(id);\n\t} catch (err) {}\n}\n"]}