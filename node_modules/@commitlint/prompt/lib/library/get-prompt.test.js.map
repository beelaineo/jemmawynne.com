{"version":3,"sources":["../../src/library/get-prompt.test.js"],"names":["t","throws","prompter","stub","message","is","input","stubPrompter","called","actions","instance","action","args","push","addListener","catch","command","description","delimiter","log","removeAllListeners","show","ui","redraw","done","setTimeout","text","Array","isArray"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,mBAAK,uBAAL,EAA8BA,KAAK;AAClCA,GAAEC,MAAF,CAAS,MAAM,0BAAf,EAA4B,2BAA5B;AACA,CAFD;;AAIA,mBAAK,mCAAL,EAA0CD,KAAK;AAC9CA,GAAEC,MAAF,CACC,MACC,yBAAU,MAAV,EAAkB;AACjBC,aAAW;AACV,UAAO,EAAP;AACA;AAHgB,EAAlB,CAFF,EAOC,2BAPD;AASA,CAVD;;AAYA,mBAAK,uCAAL,EAAoDF,CAAN;AAAA;AAC7B,wBAAM,yBAAU,MAAV,EAAkB;AACvCE,YAAUC,KAAK,QAAL;AAD6B,EAAlB,CAAN;AAAA;AAAVC,UAAU;;;AAIhBJ,KAAEK,EAAF,CAAKD,OAAL,EAAc,QAAd;AAJgB;AAAA;AAAA;AAAA;AAAA;AAD6B,aAA9C;;AAQA,SAASD,IAAT,CAAcG,QAAQ,EAAtB,EAA0B;AACzB,QAAOC,YAAP;;AAEA,UAASA,YAAT,GAAwB;AACvB,QAAMC,SAAS,EAAf;AACA,QAAMC,UAAU,EAAhB;;AAEA,QAAMC,WAAW;AAChBC,UAAO,GAAGC,IAAV,EAAgB;AACfH,YAAQI,IAAR,CAAaD,KAAK,CAAL,CAAb;AACAJ,WAAOK,IAAP,CAAY,CAACH,SAASC,MAAV,EAAkBC,IAAlB,CAAZ;AACA,IAJe;AAKhBE,eAAY,GAAGF,IAAf,EAAqB;AACpBJ,WAAOK,IAAP,CAAY,CAACH,SAASI,WAAV,EAAuBF,IAAvB,CAAZ;AACA,IAPe;AAQhBG,SAAM,GAAGH,IAAT,EAAe;AACdJ,WAAOK,IAAP,CAAY,CAACH,SAASK,KAAV,EAAiBH,IAAjB,CAAZ;AACA,WAAOF,QAAP;AACA,IAXe;AAYhBM,WAAQ,GAAGJ,IAAX,EAAiB;AAChBJ,WAAOK,IAAP,CAAY,CAACH,SAASM,OAAV,EAAmBJ,IAAnB,CAAZ;AACA,WAAOF,QAAP;AACA,IAfe;AAgBhBO,eAAY,GAAGL,IAAf,EAAqB;AACpBJ,WAAOK,IAAP,CAAY,CAACH,SAASO,WAAV,EAAuBL,IAAvB,CAAZ;AACA,WAAOF,QAAP;AACA,IAnBe;AAoBhBQ,aAAU,GAAGN,IAAb,EAAmB;AAClBJ,WAAOK,IAAP,CAAY,CAACH,SAASQ,SAAV,EAAqBN,IAArB,CAAZ;AACA,WAAOF,QAAP;AACA,IAvBe;AAwBhBS,OAAI,GAAGP,IAAP,EAAa;AACZJ,WAAOK,IAAP,CAAY,CAACH,SAASS,GAAV,EAAeP,IAAf,CAAZ;AACA,WAAOF,QAAP;AACA,IA3Be;AA4BhBU,sBAAmB,GAAGR,IAAtB,EAA4B;AAC3BJ,WAAOK,IAAP,CAAY,CAACH,SAASU,kBAAV,EAA8BR,IAA9B,CAAZ;AACA,IA9Be;AA+BhBS,QAAK,GAAGT,IAAR,EAAc;AACbJ,WAAOK,IAAP,CAAY,CAACH,SAASW,IAAV,EAAgBT,IAAhB,CAAZ;AACA,WAAOF,QAAP;AACA,IAlCe;AAmChBY,OAAI;AACHC,YAAQ;AACPC,UAAK,GAAGZ,IAAR,EAAc;AACbJ,aAAOK,IAAP,CAAY,CAACH,SAASY,EAAT,CAAYC,MAAZ,CAAmBC,IAApB,EAA0BZ,IAA1B,CAAZ;AACA;AAHM;AADL,IAnCY;AA0ChBJ;AA1CgB,GAAjB;;AA6CAiB,aAAW,MAAM;AAChBhB,WAAQ,CAAR,EAAW;AACViB,UAAMC,MAAMC,OAAN,CAActB,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD;AAD3B,IAAX;AAGA,GAJD;;AAMA,SAAOI,QAAP;AACA;AACD","file":"get-prompt.test.js","sourcesContent":["import test from 'ava';\nimport getPrompt from './get-prompt';\n\ntest('throws without params', t => {\n\tt.throws(() => getPrompt(), /Missing prompter function/);\n});\n\ntest('throws with incompatible prompter', t => {\n\tt.throws(\n\t\t() =>\n\t\t\tgetPrompt('type', {\n\t\t\t\tprompter() {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t}),\n\t\t/prompt.removeAllListeners/\n\t);\n});\n\ntest('returns input unaltered wihtout rules', async t => {\n\tconst message = await getPrompt('type', {\n\t\tprompter: stub('foobar')\n\t});\n\n\tt.is(message, 'foobar');\n});\n\nfunction stub(input = '') {\n\treturn stubPrompter;\n\n\tfunction stubPrompter() {\n\t\tconst called = [];\n\t\tconst actions = [];\n\n\t\tconst instance = {\n\t\t\taction(...args) {\n\t\t\t\tactions.push(args[0]);\n\t\t\t\tcalled.push([instance.action, args]);\n\t\t\t},\n\t\t\taddListener(...args) {\n\t\t\t\tcalled.push([instance.addListener, args]);\n\t\t\t},\n\t\t\tcatch(...args) {\n\t\t\t\tcalled.push([instance.catch, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tcommand(...args) {\n\t\t\t\tcalled.push([instance.command, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tdescription(...args) {\n\t\t\t\tcalled.push([instance.description, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tdelimiter(...args) {\n\t\t\t\tcalled.push([instance.delimiter, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tlog(...args) {\n\t\t\t\tcalled.push([instance.log, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tremoveAllListeners(...args) {\n\t\t\t\tcalled.push([instance.removeAllListeners, args]);\n\t\t\t},\n\t\t\tshow(...args) {\n\t\t\t\tcalled.push([instance.show, args]);\n\t\t\t\treturn instance;\n\t\t\t},\n\t\t\tui: {\n\t\t\t\tredraw: {\n\t\t\t\t\tdone(...args) {\n\t\t\t\t\t\tcalled.push([instance.ui.redraw.done, args]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcalled\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tactions[0]({\n\t\t\t\ttext: Array.isArray(input) ? input : [input]\n\t\t\t});\n\t\t});\n\n\t\treturn instance;\n\t}\n}\n"]}