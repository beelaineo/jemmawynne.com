{"version":3,"sources":["../src/index.js"],"names":["format","DEFAULT_SIGNS","DEFAULT_COLORS","report","options","results","length","map","result","formatInput","formatResult","join","color","enabled","errors","input","sign","decoration","gray","commitText","split","decoratedInput","bold","signs","colors","warnings","problems","problem","level","name","grey","message","selectSign","selectColor","summary"],"mappings":";;;;;kBAKwBA,M;;AALxB;;;;;;AAEA,MAAMC,gBAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAtB;AACA,MAAMC,iBAAiB,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAvB;;AAEe,SAASF,MAAT,CAAgBG,SAAS,EAAzB,EAA6BC,UAAU,EAAvC,EAA2C;AAAA,uBAClCD,MADkC,CAClDE,OADkD;AAAA,OAClDA,OADkD,mCACxC,EADwC;;;AAGzD,KAAIA,QAAQC,MAAR,GAAiB,CAArB,EAAwB;AACvB,SAAOD,QACLE,GADK,CAELC,UACE,GAAEC,YAAYD,MAAZ,EAAoBJ,OAApB,CAA6B,GAAEM,aAAaF,MAAb,EAAqBJ,OAArB,EAA8BO,IAA9B,CACjC,IADiC,CAEhC,EALE,EAOLA,IAPK,CAOA,IAPA,CAAP;AAQA;;AAED;AACA,QAAOD,aAAa,EAAb,EAAiBN,OAAjB,EAA0BO,IAA1B,CAA+B,IAA/B,CAAP;AACA;;AAED,SAASF,WAAT,CAAqBD,SAAS,EAA9B,EAAkCJ,UAAU,EAA5C,EAAgD;AAAA,sBACfA,OADe,CACxCQ,KADwC;AAAA,OACjCC,OADiC,kCACvB,IADuB;AAAA,sBAEbL,MAFa,CAExCM,MAFwC;AAAA,OAExCA,MAFwC,kCAE/B,EAF+B;AAAA,qBAEbN,MAFa,CAE3BO,KAF2B;AAAA,OAE3BA,KAF2B,iCAEnB,EAFmB;;;AAI/C,KAAI,CAACA,KAAL,EAAY;AACX,SAAO,EAAP;AACA;;AAED,OAAMC,OAAO,GAAb;AACA,OAAMC,aAAaJ,UAAU,gBAAMK,IAAN,CAAWF,IAAX,CAAV,GAA6BA,IAAhD;AACA,OAAMG,aAAaL,OAAOR,MAAP,GAAgB,CAAhB,GAAoBS,KAApB,GAA4BA,MAAMK,KAAN,CAAY,IAAZ,EAAkB,CAAlB,CAA/C;;AAEA,OAAMC,iBAAiBR,UAAU,gBAAMS,IAAN,CAAWH,UAAX,CAAV,GAAmCA,UAA1D;;AAEA,QAAQ,KAAIF,UAAW,aAAYI,cAAe,IAAlD;AACA;;AAED,SAASX,YAAT,CAAsBF,SAAS,EAA/B,EAAmCJ,UAAU,EAA7C,EAAiD;AAAA,sBAK5CA,OAL4C,CAE/CmB,KAF+C;AAAA,OAE/CA,KAF+C,kCAEvCtB,aAFuC;AAAA,uBAK5CG,OAL4C,CAG/CoB,MAH+C;AAAA,OAG/CA,MAH+C,mCAGtCtB,cAHsC;AAAA,uBAK5CE,OAL4C,CAI/CQ,KAJ+C;AAAA,OAIxCC,OAJwC,mCAI9B,IAJ8B;AAAA,uBAMXL,MANW,CAMzCM,MANyC;AAAA,OAMzCA,MANyC,mCAMhC,EANgC;AAAA,wBAMXN,MANW,CAM5BiB,QAN4B;AAAA,OAM5BA,QAN4B,oCAMjB,EANiB;;;AAQhD,OAAMC,WAAW,CAAC,GAAGZ,MAAJ,EAAY,GAAGW,QAAf,EAAyBlB,GAAzB,CAA6BoB,WAAW;AACxD,QAAMX,OAAOO,MAAMI,QAAQC,KAAd,KAAwB,EAArC;AACA,QAAMhB,QAAQY,OAAOG,QAAQC,KAAf,KAAyB,OAAvC;AACA,QAAMX,aAAaJ,UAAU,gBAAMD,KAAN,EAAaI,IAAb,CAAV,GAA+BA,IAAlD;AACA,QAAMa,OAAOhB,UACV,gBAAMiB,IAAN,CAAY,IAAGH,QAAQE,IAAK,GAA5B,CADU,GAET,IAAGF,QAAQE,IAAK,GAFpB;AAGA,SAAQ,GAAEZ,UAAW,MAAKU,QAAQI,OAAQ,IAAGF,IAAK,EAAlD;AACA,EARgB,CAAjB;;AAUA,OAAMb,OAAOgB,WAAW,EAAClB,MAAD,EAASW,QAAT,EAAX,CAAb;AACA,OAAMb,QAAQqB,YAAY,EAACnB,MAAD,EAASW,QAAT,EAAZ,CAAd;;AAEA,OAAMR,aAAaJ,UAAU,gBAAMD,KAAN,EAAaI,IAAb,CAAV,GAA+BA,IAAlD;AACA,OAAMkB,UAAW,GAAEjB,UAAW,YAAWH,OAAOR,MAAO,cACtDmB,SAASnB,MACT,8GAFD;AAGA,QAAO,CAAC,GAAGoB,QAAJ,EAAcb,UAAU,gBAAMS,IAAN,CAAWY,OAAX,CAAV,GAAgCA,OAA9C,CAAP;AACA;;AAED,SAASF,UAAT,CAAoBxB,MAApB,EAA4B;AAC3B,KAAIA,OAAOM,MAAP,CAAcR,MAAd,GAAuB,CAA3B,EAA8B;AAC7B,SAAO,GAAP;AACA;AACD,QAAOE,OAAOiB,QAAP,CAAgBnB,MAAhB,GAAyB,GAAzB,GAA+B,GAAtC;AACA;;AAED,SAAS2B,WAAT,CAAqBzB,MAArB,EAA6B;AAC5B,KAAIA,OAAOM,MAAP,CAAcR,MAAd,GAAuB,CAA3B,EAA8B;AAC7B,SAAO,KAAP;AACA;AACD,QAAOE,OAAOiB,QAAP,CAAgBnB,MAAhB,GAAyB,QAAzB,GAAoC,OAA3C;AACA","file":"index.js","sourcesContent":["import chalk from 'chalk';\n\nconst DEFAULT_SIGNS = [' ', '⚠', '✖'];\nconst DEFAULT_COLORS = ['white', 'yellow', 'red'];\n\nexport default function format(report = {}, options = {}) {\n\tconst {results = []} = report;\n\n\tif (results.length > 0) {\n\t\treturn results\n\t\t\t.map(\n\t\t\t\tresult =>\n\t\t\t\t\t`${formatInput(result, options)}${formatResult(result, options).join(\n\t\t\t\t\t\t'\\n'\n\t\t\t\t\t)}`\n\t\t\t)\n\t\t\t.join('\\n');\n\t}\n\n\t// Output a summary when nothing is found\n\treturn formatResult({}, options).join('\\n');\n}\n\nfunction formatInput(result = {}, options = {}) {\n\tconst {color: enabled = true} = options;\n\tconst {errors = [], input = ''} = result;\n\n\tif (!input) {\n\t\treturn '';\n\t}\n\n\tconst sign = '⧗';\n\tconst decoration = enabled ? chalk.gray(sign) : sign;\n\tconst commitText = errors.length > 0 ? input : input.split('\\n')[0];\n\n\tconst decoratedInput = enabled ? chalk.bold(commitText) : commitText;\n\n\treturn `\\n${decoration}   input: ${decoratedInput}\\n`;\n}\n\nfunction formatResult(result = {}, options = {}) {\n\tconst {\n\t\tsigns = DEFAULT_SIGNS,\n\t\tcolors = DEFAULT_COLORS,\n\t\tcolor: enabled = true\n\t} = options;\n\tconst {errors = [], warnings = []} = result;\n\n\tconst problems = [...errors, ...warnings].map(problem => {\n\t\tconst sign = signs[problem.level] || '';\n\t\tconst color = colors[problem.level] || 'white';\n\t\tconst decoration = enabled ? chalk[color](sign) : sign;\n\t\tconst name = enabled\n\t\t\t? chalk.grey(`[${problem.name}]`)\n\t\t\t: `[${problem.name}]`;\n\t\treturn `${decoration}   ${problem.message} ${name}`;\n\t});\n\n\tconst sign = selectSign({errors, warnings});\n\tconst color = selectColor({errors, warnings});\n\n\tconst decoration = enabled ? chalk[color](sign) : sign;\n\tconst summary = `${decoration}   found ${errors.length} problems, ${\n\t\twarnings.length\n\t} warnings \\n    (Need help? -> https://github.com/conventional-changelog/commitlint#what-is-commitlint )\\n\\n`;\n\treturn [...problems, enabled ? chalk.bold(summary) : summary];\n}\n\nfunction selectSign(result) {\n\tif (result.errors.length > 0) {\n\t\treturn '✖';\n\t}\n\treturn result.warnings.length ? '⚠' : '✔';\n}\n\nfunction selectColor(result) {\n\tif (result.errors.length > 0) {\n\t\treturn 'red';\n\t}\n\treturn result.warnings.length ? 'yellow' : 'green';\n}\n"]}