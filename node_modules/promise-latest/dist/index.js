"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = latest;

function latest(fn) {
  var lastAdded = undefined;
  var pending = undefined;
  var resolve = undefined;
  var reject = undefined;
  return function () {
    // in the future if/when promises gets cancellable, we could abort the previous here like this
    // lastAdded.cancel()
    lastAdded = fn.apply(undefined, arguments);
    if (!pending) {
      pending = new Promise(function (_resolve, _reject) {
        resolve = _resolve;
        reject = _reject;
      });
    }
    lastAdded.then(fulfill.bind(null, lastAdded), fail.bind(null, lastAdded));
    return pending;
  };
  function fulfill(promise, value) {
    if (promise === lastAdded) {
      pending = null;
      resolve(value);
    }
  }

  function fail(promise, error) {
    if (promise === lastAdded) {
      pending = null;
      reject(error);
    }
  }
}

module.exports = exports["default"];
//# sourceMappingURL=index.js.map